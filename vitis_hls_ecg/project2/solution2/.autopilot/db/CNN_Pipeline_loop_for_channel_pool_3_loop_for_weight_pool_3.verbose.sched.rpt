

================================================================
== Vitis HLS Report for 'CNN_Pipeline_loop_for_channel_pool_3_loop_for_weight_pool_3'
================================================================
* Date:           Fri Jun  7 16:44:05 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        project2
* Solution:       solution2 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.042 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      649|      649|  3.245 us|  3.245 us|  649|  649|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_for_channel_pool_3_loop_for_weight_pool_3  |      647|      647|         9|          1|          1|   640|       yes|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.84>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [Pool.cpp:77->CNN.cpp:50]   --->   Operation 12 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%z = alloca i32 1" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 13 'alloca' 'z' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten242 = alloca i32 1"   --->   Operation 14 'alloca' 'indvar_flatten242' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten242"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 16 [1/1] (0.42ns)   --->   "%store_ln74 = store i6 0, i6 %z" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 16 'store' 'store_ln74' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 17 [1/1] (0.42ns)   --->   "%store_ln77 = store i5 0, i5 %y" [Pool.cpp:77->CNN.cpp:50]   --->   Operation 17 'store' 'store_ln77' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end.i.i.i.i496"   --->   Operation 18 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%indvar_flatten242_load = load i10 %indvar_flatten242" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 19 'load' 'indvar_flatten242_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.78ns)   --->   "%icmp_ln74 = icmp_eq  i10 %indvar_flatten242_load, i10 640" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 20 'icmp' 'icmp_ln74' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.78ns)   --->   "%add_ln74 = add i10 %indvar_flatten242_load, i10 1" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 21 'add' 'add_ln74' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln74 = br i1 %icmp_ln74, void %for.inc19.i512, void %for.body.i.preheader.exitStub" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 22 'br' 'br_ln74' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%y_load = load i5 %y" [Pool.cpp:77->CNN.cpp:50]   --->   Operation 23 'load' 'y_load' <Predicate = (!icmp_ln74)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.78ns)   --->   "%icmp_ln77 = icmp_eq  i5 %y_load, i5 20" [Pool.cpp:77->CNN.cpp:50]   --->   Operation 24 'icmp' 'icmp_ln77' <Predicate = (!icmp_ln74)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.41ns)   --->   "%select_ln74 = select i1 %icmp_ln77, i5 0, i5 %y_load" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 25 'select' 'select_ln74' <Predicate = (!icmp_ln74)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 26 [9/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 26 'urem' 'urem_ln86' <Predicate = (!icmp_ln74)> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.78ns)   --->   "%add_ln87 = add i5 %select_ln74, i5 1" [Pool.cpp:87->CNN.cpp:50]   --->   Operation 27 'add' 'add_ln87' <Predicate = (!icmp_ln74)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.42ns)   --->   "%store_ln74 = store i10 %add_ln74, i10 %indvar_flatten242" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 28 'store' 'store_ln74' <Predicate = (!icmp_ln74)> <Delay = 0.42>
ST_1 : Operation 29 [1/1] (0.42ns)   --->   "%store_ln77 = store i5 %add_ln87, i5 %y" [Pool.cpp:77->CNN.cpp:50]   --->   Operation 29 'store' 'store_ln77' <Predicate = (!icmp_ln74)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 1.06>
ST_2 : Operation 30 [8/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 30 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 1.06>
ST_3 : Operation 31 [7/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 31 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 1.06>
ST_4 : Operation 32 [6/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 32 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.06>
ST_5 : Operation 33 [5/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 33 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 1.59>
ST_6 : Operation 34 [1/1] (0.00ns)   --->   "%z_load = load i6 %z" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 34 'load' 'z_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 35 [1/1] (0.78ns)   --->   "%add_ln74_1 = add i6 %z_load, i6 1" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 35 'add' 'add_ln74_1' <Predicate = (icmp_ln77)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 36 [1/1] (0.38ns)   --->   "%select_ln74_1 = select i1 %icmp_ln77, i6 %add_ln74_1, i6 %z_load" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 36 'select' 'select_ln74_1' <Predicate = true> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 37 [1/1] (0.00ns)   --->   "%empty = trunc i6 %select_ln74_1" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 37 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 38 [4/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 38 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln74 = store i6 %select_ln74_1, i6 %z" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 39 'store' 'store_ln74' <Predicate = true> <Delay = 0.42>
ST_6 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln77 = br void %if.end.i.i.i.i496" [Pool.cpp:77->CNN.cpp:50]   --->   Operation 40 'br' 'br_ln77' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 2.82>
ST_7 : Operation 41 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i5.i5, i5 %empty, i5 0" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 41 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 42 [1/1] (0.00ns)   --->   "%p_shl58_cast = zext i10 %p_shl" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 42 'zext' 'p_shl58_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 43 [1/1] (0.00ns)   --->   "%p_shl1 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i5.i3, i5 %empty, i3 0" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 43 'bitconcatenate' 'p_shl1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 44 [1/1] (0.00ns)   --->   "%p_shl59_cast = zext i8 %p_shl1" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 44 'zext' 'p_shl59_cast' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 45 [1/1] (0.78ns)   --->   "%empty_152 = add i11 %p_shl58_cast, i11 %p_shl59_cast" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 45 'add' 'empty_152' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i5.i1, i5 %select_ln74, i1 0" [Pool.cpp:74->CNN.cpp:50]   --->   Operation 46 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i6 %tmp_s" [Pool.cpp:81->CNN.cpp:50]   --->   Operation 47 'zext' 'zext_ln81' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 48 [1/1] (0.79ns)   --->   "%add_ln81 = add i11 %zext_ln81, i11 %empty_152" [Pool.cpp:81->CNN.cpp:50]   --->   Operation 48 'add' 'add_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i11 %add_ln81" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 49 'zext' 'zext_ln82' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 50 [1/1] (0.00ns)   --->   "%OutConv7_addr = getelementptr i16 %OutConv7, i64 0, i64 %zext_ln82" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 50 'getelementptr' 'OutConv7_addr' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 51 [2/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv7_addr" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 51 'load' 'pool_value' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_7 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node add_ln81_1)   --->   "%or_ln81 = or i11 %empty_152, i11 1" [Pool.cpp:81->CNN.cpp:50]   --->   Operation 52 'or' 'or_ln81' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 53 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln81_1 = add i11 %zext_ln81, i11 %or_ln81" [Pool.cpp:81->CNN.cpp:50]   --->   Operation 53 'add' 'add_ln81_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln82_1 = zext i11 %add_ln81_1" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 54 'zext' 'zext_ln82_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 55 [1/1] (0.00ns)   --->   "%OutConv7_addr_1 = getelementptr i16 %OutConv7, i64 0, i64 %zext_ln82_1" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 55 'getelementptr' 'OutConv7_addr_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 56 [2/2] (1.23ns)   --->   "%pool_value_1 = load i11 %OutConv7_addr_1" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 56 'load' 'pool_value_1' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_7 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%shl_ln86 = shl i6 %select_ln74_1, i6 1" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 57 'shl' 'shl_ln86' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln86 = zext i5 %select_ln74" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 58 'zext' 'zext_ln86' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 59 [1/1] (1.51ns)   --->   "%mul_ln86 = mul i11 %zext_ln86, i11 52" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 59 'mul' 'mul_ln86' <Predicate = true> <Delay = 1.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%tmp = partselect i2 @_ssdm_op_PartSelect.i2.i11.i32.i32, i11 %mul_ln86, i32 9, i32 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 60 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node add_ln86)   --->   "%zext_ln86_1 = zext i2 %tmp" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 61 'zext' 'zext_ln86_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 62 [1/1] (0.78ns) (out node of the LUT)   --->   "%add_ln86 = add i6 %zext_ln86_1, i6 %shl_ln86" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 62 'add' 'add_ln86' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 63 [3/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 63 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 2.44>
ST_8 : Operation 64 [1/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv7_addr" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 64 'load' 'pool_value' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_8 : Operation 65 [1/1] (0.85ns)   --->   "%icmp_ln83 = icmp_sgt  i16 %pool_value, i16 62976" [Pool.cpp:83->CNN.cpp:50]   --->   Operation 65 'icmp' 'icmp_ln83' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 66 [1/1] (0.35ns)   --->   "%max = select i1 %icmp_ln83, i16 %pool_value, i16 62976" [Pool.cpp:83->CNN.cpp:50]   --->   Operation 66 'select' 'max' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 67 [1/2] (1.23ns)   --->   "%pool_value_1 = load i11 %OutConv7_addr_1" [Pool.cpp:82->CNN.cpp:50]   --->   Operation 67 'load' 'pool_value_1' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_8 : Operation 68 [2/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 68 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 108 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 108 'ret' 'ret_ln0' <Predicate = (icmp_ln74)> <Delay = 0.00>

State 9 <SV = 8> <Delay = 3.04>
ST_9 : Operation 69 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @loop_for_channel_pool_3_loop_for_weight_pool_3_str"   --->   Operation 69 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 70 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 640, i64 640, i64 640"   --->   Operation 70 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 71 [1/1] (0.00ns)   --->   "%specpipeline_ln72 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [Pool.cpp:72->CNN.cpp:50]   --->   Operation 71 'specpipeline' 'specpipeline_ln72' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (0.85ns)   --->   "%icmp_ln83_1 = icmp_sgt  i16 %pool_value_1, i16 %max" [Pool.cpp:83->CNN.cpp:50]   --->   Operation 72 'icmp' 'icmp_ln83_1' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 73 [1/1] (0.35ns)   --->   "%max_1 = select i1 %icmp_ln83_1, i16 %pool_value_1, i16 %max" [Pool.cpp:83->CNN.cpp:50]   --->   Operation 73 'select' 'max_1' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln86_2 = zext i6 %add_ln86" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 74 'zext' 'zext_ln86_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 75 [1/9] (1.06ns)   --->   "%urem_ln86 = urem i5 %select_ln74, i5 10" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 75 'urem' 'urem_ln86' <Predicate = true> <Delay = 1.06> <CoreInst = "Divider">   --->   Core 6 'Divider' <Latency = 8> <II = 1> <Delay = 1.06> <FuncUnit> <Opcode : 'udiv' 'sdiv' 'urem' 'srem'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 76 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i4 %urem_ln86" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 76 'trunc' 'trunc_ln86' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 77 [1/1] (0.00ns)   --->   "%OutPool3_addr = getelementptr i16 %OutPool3, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 77 'getelementptr' 'OutPool3_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 78 [1/1] (0.00ns)   --->   "%OutPool3_1_addr = getelementptr i16 %OutPool3_1, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 78 'getelementptr' 'OutPool3_1_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%OutPool3_2_addr = getelementptr i16 %OutPool3_2, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 79 'getelementptr' 'OutPool3_2_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%OutPool3_3_addr = getelementptr i16 %OutPool3_3, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 80 'getelementptr' 'OutPool3_3_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 81 [1/1] (0.00ns)   --->   "%OutPool3_4_addr = getelementptr i16 %OutPool3_4, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 81 'getelementptr' 'OutPool3_4_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 82 [1/1] (0.00ns)   --->   "%OutPool3_5_addr = getelementptr i16 %OutPool3_5, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 82 'getelementptr' 'OutPool3_5_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%OutPool3_6_addr = getelementptr i16 %OutPool3_6, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 83 'getelementptr' 'OutPool3_6_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "%OutPool3_7_addr = getelementptr i16 %OutPool3_7, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 84 'getelementptr' 'OutPool3_7_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%OutPool3_8_addr = getelementptr i16 %OutPool3_8, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 85 'getelementptr' 'OutPool3_8_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%OutPool3_9_addr = getelementptr i16 %OutPool3_9, i64 0, i64 %zext_ln86_2" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 86 'getelementptr' 'OutPool3_9_addr' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.74ns)   --->   "%switch_ln86 = switch i4 %trunc_ln86, void %arrayidx14.i506614.case.9, i4 0, void %arrayidx14.i506614.case.0, i4 1, void %arrayidx14.i506614.case.1, i4 2, void %arrayidx14.i506614.case.2, i4 3, void %arrayidx14.i506614.case.3, i4 4, void %arrayidx14.i506614.case.4, i4 5, void %arrayidx14.i506614.case.5, i4 6, void %arrayidx14.i506614.case.6, i4 7, void %arrayidx14.i506614.case.7, i4 8, void %arrayidx14.i506614.case.8" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 87 'switch' 'switch_ln86' <Predicate = true> <Delay = 0.74>
ST_9 : Operation 88 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_8_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 88 'store' 'store_ln86' <Predicate = (trunc_ln86 == 8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 89 'br' 'br_ln86' <Predicate = (trunc_ln86 == 8)> <Delay = 0.00>
ST_9 : Operation 90 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_7_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 90 'store' 'store_ln86' <Predicate = (trunc_ln86 == 7)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 91 'br' 'br_ln86' <Predicate = (trunc_ln86 == 7)> <Delay = 0.00>
ST_9 : Operation 92 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_6_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 92 'store' 'store_ln86' <Predicate = (trunc_ln86 == 6)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 93 'br' 'br_ln86' <Predicate = (trunc_ln86 == 6)> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_5_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 94 'store' 'store_ln86' <Predicate = (trunc_ln86 == 5)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 95 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 95 'br' 'br_ln86' <Predicate = (trunc_ln86 == 5)> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_4_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 96 'store' 'store_ln86' <Predicate = (trunc_ln86 == 4)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 97 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 97 'br' 'br_ln86' <Predicate = (trunc_ln86 == 4)> <Delay = 0.00>
ST_9 : Operation 98 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_3_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 98 'store' 'store_ln86' <Predicate = (trunc_ln86 == 3)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 99 'br' 'br_ln86' <Predicate = (trunc_ln86 == 3)> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_2_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 100 'store' 'store_ln86' <Predicate = (trunc_ln86 == 2)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 101 'br' 'br_ln86' <Predicate = (trunc_ln86 == 2)> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_1_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 102 'store' 'store_ln86' <Predicate = (trunc_ln86 == 1)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 103 'br' 'br_ln86' <Predicate = (trunc_ln86 == 1)> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 104 'store' 'store_ln86' <Predicate = (trunc_ln86 == 0)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 105 'br' 'br_ln86' <Predicate = (trunc_ln86 == 0)> <Delay = 0.00>
ST_9 : Operation 106 [1/1] (1.23ns)   --->   "%store_ln86 = store i16 %max_1, i6 %OutPool3_9_addr" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 106 'store' 'store_ln86' <Predicate = (trunc_ln86 != 0 & trunc_ln86 != 1 & trunc_ln86 != 2 & trunc_ln86 != 3 & trunc_ln86 != 4 & trunc_ln86 != 5 & trunc_ln86 != 6 & trunc_ln86 != 7 & trunc_ln86 != 8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 64> <RAM>
ST_9 : Operation 107 [1/1] (0.00ns)   --->   "%br_ln86 = br void %arrayidx14.i506614.exit" [Pool.cpp:86->CNN.cpp:50]   --->   Operation 107 'br' 'br_ln86' <Predicate = (trunc_ln86 != 0 & trunc_ln86 != 1 & trunc_ln86 != 2 & trunc_ln86 != 3 & trunc_ln86 != 4 & trunc_ln86 != 5 & trunc_ln86 != 6 & trunc_ln86 != 7 & trunc_ln86 != 8)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 2.846ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln77', Pool.cpp:77->CNN.cpp:50) of constant 0 on local variable 'y', Pool.cpp:77->CNN.cpp:50 [17]  (0.427 ns)
	'load' operation 5 bit ('y_load', Pool.cpp:77->CNN.cpp:50) on local variable 'y', Pool.cpp:77->CNN.cpp:50 [25]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln77', Pool.cpp:77->CNN.cpp:50) [29]  (0.789 ns)
	'select' operation 5 bit ('select_ln74', Pool.cpp:74->CNN.cpp:50) [30]  (0.414 ns)
	'add' operation 5 bit ('add_ln87', Pool.cpp:87->CNN.cpp:50) [106]  (0.789 ns)
	'store' operation 0 bit ('store_ln77', Pool.cpp:77->CNN.cpp:50) of variable 'add_ln87', Pool.cpp:87->CNN.cpp:50 on local variable 'y', Pool.cpp:77->CNN.cpp:50 [109]  (0.427 ns)

 <State 2>: 1.064ns
The critical path consists of the following:
	'urem' operation 4 bit ('urem_ln86', Pool.cpp:86->CNN.cpp:50) [62]  (1.064 ns)

 <State 3>: 1.064ns
The critical path consists of the following:
	'urem' operation 4 bit ('urem_ln86', Pool.cpp:86->CNN.cpp:50) [62]  (1.064 ns)

 <State 4>: 1.064ns
The critical path consists of the following:
	'urem' operation 4 bit ('urem_ln86', Pool.cpp:86->CNN.cpp:50) [62]  (1.064 ns)

 <State 5>: 1.064ns
The critical path consists of the following:
	'urem' operation 4 bit ('urem_ln86', Pool.cpp:86->CNN.cpp:50) [62]  (1.064 ns)

 <State 6>: 1.592ns
The critical path consists of the following:
	'load' operation 6 bit ('z_load', Pool.cpp:74->CNN.cpp:50) on local variable 'z', Pool.cpp:74->CNN.cpp:50 [26]  (0.000 ns)
	'add' operation 6 bit ('add_ln74_1', Pool.cpp:74->CNN.cpp:50) [31]  (0.781 ns)
	'select' operation 6 bit ('select_ln74_1', Pool.cpp:74->CNN.cpp:50) [32]  (0.384 ns)
	'store' operation 0 bit ('store_ln74', Pool.cpp:74->CNN.cpp:50) of variable 'select_ln74_1', Pool.cpp:74->CNN.cpp:50 on local variable 'z', Pool.cpp:74->CNN.cpp:50 [108]  (0.427 ns)

 <State 7>: 2.822ns
The critical path consists of the following:
	'add' operation 11 bit ('empty_152', Pool.cpp:74->CNN.cpp:50) [38]  (0.787 ns)
	'add' operation 11 bit ('add_ln81', Pool.cpp:81->CNN.cpp:50) [42]  (0.798 ns)
	'getelementptr' operation 11 bit ('OutConv7_addr', Pool.cpp:82->CNN.cpp:50) [44]  (0.000 ns)
	'load' operation 16 bit ('pool_value', Pool.cpp:82->CNN.cpp:50) on array 'OutConv7' [45]  (1.237 ns)

 <State 8>: 2.447ns
The critical path consists of the following:
	'load' operation 16 bit ('pool_value', Pool.cpp:82->CNN.cpp:50) on array 'OutConv7' [45]  (1.237 ns)
	'icmp' operation 1 bit ('icmp_ln83', Pool.cpp:83->CNN.cpp:50) [46]  (0.853 ns)
	'select' operation 16 bit ('max', Pool.cpp:83->CNN.cpp:50) [47]  (0.357 ns)

 <State 9>: 3.042ns
The critical path consists of the following:
	'urem' operation 4 bit ('urem_ln86', Pool.cpp:86->CNN.cpp:50) [62]  (1.064 ns)
	'store' operation 0 bit ('store_ln86', Pool.cpp:86->CNN.cpp:50) of variable 'max', Pool.cpp:83->CNN.cpp:50 on array 'OutPool3_3' [91]  (1.237 ns)
	blocking operation 0.74125 ns on control path)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
