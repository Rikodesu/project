

================================================================
== Vitis HLS Report for 'CNN_Pipeline_loop_for_channel_pool_1_loop_for_weight_pool_1'
================================================================
* Date:           Fri Jun  7 16:44:02 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        project2
* Solution:       solution2 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  2.822 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      644|      644|  3.220 us|  3.220 us|  644|  644|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_for_channel_pool_1_loop_for_weight_pool_1  |      642|      642|         4|          1|          1|   640|       yes|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.76>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 7 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%z = alloca i32 1" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 8 'alloca' 'z' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%indvar_flatten55 = alloca i32 1"   --->   Operation 9 'alloca' 'indvar_flatten55' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten55"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 11 [1/1] (0.42ns)   --->   "%store_ln30 = store i4 0, i4 %z" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 11 'store' 'store_ln30' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 12 [1/1] (0.42ns)   --->   "%store_ln33 = store i7 0, i7 %y" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 12 'store' 'store_ln33' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end.i.i.i.i195"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%indvar_flatten55_load = load i10 %indvar_flatten55" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 14 'load' 'indvar_flatten55_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.78ns)   --->   "%icmp_ln30 = icmp_eq  i10 %indvar_flatten55_load, i10 640" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 15 'icmp' 'icmp_ln30' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.78ns)   --->   "%add_ln30 = add i10 %indvar_flatten55_load, i10 1" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 16 'add' 'add_ln30' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%br_ln30 = br i1 %icmp_ln30, void %for.inc19.i211, void %for.body4.i217.preheader.exitStub" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 17 'br' 'br_ln30' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%y_load = load i7 %y" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 18 'load' 'y_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%z_load = load i4 %z" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 19 'load' 'z_load' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.77ns)   --->   "%icmp_ln33 = icmp_eq  i7 %y_load, i7 80" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 20 'icmp' 'icmp_ln33' <Predicate = (!icmp_ln30)> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.36ns)   --->   "%select_ln30 = select i1 %icmp_ln33, i7 0, i7 %y_load" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 21 'select' 'select_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.36> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.36> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.79ns)   --->   "%add_ln30_1 = add i4 %z_load, i4 1" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 22 'add' 'add_ln30_1' <Predicate = (!icmp_ln30)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.39ns)   --->   "%select_ln30_1 = select i1 %icmp_ln33, i4 %add_ln30_1, i4 %z_load" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 23 'select' 'select_ln30_1' <Predicate = (!icmp_ln30)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty = trunc i4 %select_ln30_1" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 24 'trunc' 'empty' <Predicate = (!icmp_ln30)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.77ns)   --->   "%add_ln43 = add i7 %select_ln30, i7 1" [Pool.cpp:43->CNN.cpp:40]   --->   Operation 25 'add' 'add_ln43' <Predicate = (!icmp_ln30)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln30 = store i10 %add_ln30, i10 %indvar_flatten55" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 26 'store' 'store_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln30 = store i4 %select_ln30_1, i4 %z" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 27 'store' 'store_ln30' <Predicate = (!icmp_ln30)> <Delay = 0.42>
ST_1 : Operation 28 [1/1] (0.42ns)   --->   "%store_ln33 = store i7 %add_ln43, i7 %y" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 28 'store' 'store_ln33' <Predicate = (!icmp_ln30)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 2.82>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%p_shl = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i3.i7, i3 %empty, i7 0" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 29 'bitconcatenate' 'p_shl' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%p_shl27_cast = zext i10 %p_shl" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 30 'zext' 'p_shl27_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%p_shl5 = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i3.i5, i3 %empty, i5 0" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 31 'bitconcatenate' 'p_shl5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%p_shl28_cast = zext i8 %p_shl5" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 32 'zext' 'p_shl28_cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.78ns)   --->   "%empty_154 = add i11 %p_shl27_cast, i11 %p_shl28_cast" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 33 'add' 'empty_154' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i8 @_ssdm_op_BitConcatenate.i8.i7.i1, i7 %select_ln30, i1 0" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 34 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i8 %tmp_s" [Pool.cpp:37->CNN.cpp:40]   --->   Operation 35 'zext' 'zext_ln37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.79ns)   --->   "%add_ln37 = add i11 %zext_ln37, i11 %empty_154" [Pool.cpp:37->CNN.cpp:40]   --->   Operation 36 'add' 'add_ln37' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i11 %add_ln37" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 37 'zext' 'zext_ln38' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%OutConv3_addr = getelementptr i16 %OutConv3, i64 0, i64 %zext_ln38" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 38 'getelementptr' 'OutConv3_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 39 [2/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv3_addr" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 39 'load' 'pool_value' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node add_ln37_1)   --->   "%or_ln37 = or i11 %empty_154, i11 1" [Pool.cpp:37->CNN.cpp:40]   --->   Operation 40 'or' 'or_ln37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.79ns) (out node of the LUT)   --->   "%add_ln37_1 = add i11 %zext_ln37, i11 %or_ln37" [Pool.cpp:37->CNN.cpp:40]   --->   Operation 41 'add' 'add_ln37_1' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln38_1 = zext i11 %add_ln37_1" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 42 'zext' 'zext_ln38_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%OutConv3_addr_1 = getelementptr i16 %OutConv3, i64 0, i64 %zext_ln38_1" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 43 'getelementptr' 'OutConv3_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [2/2] (1.23ns)   --->   "%pool_value_3 = load i11 %OutConv3_addr_1" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 44 'load' 'pool_value_3' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>

State 3 <SV = 2> <Delay = 2.44>
ST_3 : Operation 45 [1/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv3_addr" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 45 'load' 'pool_value' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_3 : Operation 46 [1/1] (0.85ns)   --->   "%icmp_ln39 = icmp_sgt  i16 %pool_value, i16 62976" [Pool.cpp:39->CNN.cpp:40]   --->   Operation 46 'icmp' 'icmp_ln39' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.35ns)   --->   "%max = select i1 %icmp_ln39, i16 %pool_value, i16 62976" [Pool.cpp:39->CNN.cpp:40]   --->   Operation 47 'select' 'max' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 48 [1/2] (1.23ns)   --->   "%pool_value_3 = load i11 %OutConv3_addr_1" [Pool.cpp:38->CNN.cpp:40]   --->   Operation 48 'load' 'pool_value_3' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 66 'ret' 'ret_ln0' <Predicate = (icmp_ln30)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 2.78>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @loop_for_channel_pool_1_loop_for_weight_pool_1_str"   --->   Operation 49 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 640, i64 640, i64 640"   --->   Operation 50 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%p_shl6 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i3.i6, i3 %empty, i6 0" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 51 'bitconcatenate' 'p_shl6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%p_shl25_cast = zext i9 %p_shl6" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 52 'zext' 'p_shl25_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%p_shl7 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i3.i4, i3 %empty, i4 0" [Pool.cpp:30->CNN.cpp:40]   --->   Operation 53 'bitconcatenate' 'p_shl7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i7 %p_shl7" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 54 'zext' 'zext_ln33' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln33_1 = zext i7 %select_ln30" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 55 'zext' 'zext_ln33_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%specpipeline_ln28 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [Pool.cpp:28->CNN.cpp:40]   --->   Operation 56 'specpipeline' 'specpipeline_ln28' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.85ns)   --->   "%icmp_ln39_1 = icmp_sgt  i16 %pool_value_3, i16 %max" [Pool.cpp:39->CNN.cpp:40]   --->   Operation 57 'icmp' 'icmp_ln39_1' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.35ns)   --->   "%max_3 = select i1 %icmp_ln39_1, i16 %pool_value_3, i16 %max" [Pool.cpp:39->CNN.cpp:40]   --->   Operation 58 'select' 'max_3' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.77ns)   --->   "%add_ln41 = add i8 %zext_ln33, i8 %zext_ln33_1" [Pool.cpp:41->CNN.cpp:40]   --->   Operation 59 'add' 'add_ln41' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln41 = zext i8 %add_ln41" [Pool.cpp:41->CNN.cpp:40]   --->   Operation 60 'zext' 'zext_ln41' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.77ns)   --->   "%add_ln41_1 = add i10 %zext_ln41, i10 %p_shl25_cast" [Pool.cpp:41->CNN.cpp:40]   --->   Operation 61 'add' 'add_ln41_1' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i10 %add_ln41_1" [Pool.cpp:42->CNN.cpp:40]   --->   Operation 62 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%OutPool1_addr = getelementptr i16 %OutPool1, i64 0, i64 %zext_ln42" [Pool.cpp:42->CNN.cpp:40]   --->   Operation 63 'getelementptr' 'OutPool1_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (1.23ns)   --->   "%store_ln42 = store i16 %max_3, i10 %OutPool1_addr" [Pool.cpp:42->CNN.cpp:40]   --->   Operation 64 'store' 'store_ln42' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 640> <RAM>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln33 = br void %if.end.i.i.i.i195" [Pool.cpp:33->CNN.cpp:40]   --->   Operation 65 'br' 'br_ln33' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 2.760ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln33', Pool.cpp:33->CNN.cpp:40) of constant 0 on local variable 'y', Pool.cpp:33->CNN.cpp:40 [8]  (0.427 ns)
	'load' operation 7 bit ('y_load', Pool.cpp:33->CNN.cpp:40) on local variable 'y', Pool.cpp:33->CNN.cpp:40 [16]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln33', Pool.cpp:33->CNN.cpp:40) [20]  (0.773 ns)
	'select' operation 7 bit ('select_ln30', Pool.cpp:30->CNN.cpp:40) [21]  (0.360 ns)
	'add' operation 7 bit ('add_ln43', Pool.cpp:43->CNN.cpp:40) [57]  (0.773 ns)
	'store' operation 0 bit ('store_ln33', Pool.cpp:33->CNN.cpp:40) of variable 'add_ln43', Pool.cpp:43->CNN.cpp:40 on local variable 'y', Pool.cpp:33->CNN.cpp:40 [60]  (0.427 ns)

 <State 2>: 2.822ns
The critical path consists of the following:
	'add' operation 11 bit ('empty_154', Pool.cpp:30->CNN.cpp:40) [29]  (0.787 ns)
	'add' operation 11 bit ('add_ln37', Pool.cpp:37->CNN.cpp:40) [38]  (0.798 ns)
	'getelementptr' operation 11 bit ('OutConv3_addr', Pool.cpp:38->CNN.cpp:40) [40]  (0.000 ns)
	'load' operation 16 bit ('pool_value', Pool.cpp:38->CNN.cpp:40) on array 'OutConv3' [41]  (1.237 ns)

 <State 3>: 2.447ns
The critical path consists of the following:
	'load' operation 16 bit ('pool_value', Pool.cpp:38->CNN.cpp:40) on array 'OutConv3' [41]  (1.237 ns)
	'icmp' operation 1 bit ('icmp_ln39', Pool.cpp:39->CNN.cpp:40) [42]  (0.853 ns)
	'select' operation 16 bit ('max', Pool.cpp:39->CNN.cpp:40) [43]  (0.357 ns)

 <State 4>: 2.786ns
The critical path consists of the following:
	'add' operation 8 bit ('add_ln41', Pool.cpp:41->CNN.cpp:40) [51]  (0.773 ns)
	'add' operation 10 bit ('add_ln41_1', Pool.cpp:41->CNN.cpp:40) [53]  (0.776 ns)
	'getelementptr' operation 10 bit ('OutPool1_addr', Pool.cpp:42->CNN.cpp:40) [55]  (0.000 ns)
	'store' operation 0 bit ('store_ln42', Pool.cpp:42->CNN.cpp:40) of variable 'max', Pool.cpp:39->CNN.cpp:40 on array 'OutPool1' [56]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
