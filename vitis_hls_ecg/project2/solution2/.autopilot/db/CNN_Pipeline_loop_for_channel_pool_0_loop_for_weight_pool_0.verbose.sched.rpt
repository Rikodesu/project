

================================================================
== Vitis HLS Report for 'CNN_Pipeline_loop_for_channel_pool_0_loop_for_weight_pool_0'
================================================================
* Date:           Fri Jun  7 16:43:59 2024

* Version:        2023.2 (Build 4023990 on Oct 11 2023)
* Project:        project2
* Solution:       solution2 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck26-sfvc784-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.609 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      643|      643|  3.215 us|  3.215 us|  643|  643|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                                                  |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |                     Loop Name                    |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_for_channel_pool_0_loop_for_weight_pool_0  |      641|      641|         3|          1|          1|   640|       yes|
        +--------------------------------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.60>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%y = alloca i32 1" [Pool.cpp:11->CNN.cpp:35]   --->   Operation 6 'alloca' 'y' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%z = alloca i32 1" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 7 'alloca' 'z' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%indvar_flatten20 = alloca i32 1"   --->   Operation 8 'alloca' 'indvar_flatten20' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten20"   --->   Operation 9 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 10 [1/1] (0.42ns)   --->   "%store_ln8 = store i3 0, i3 %z" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 10 'store' 'store_ln8' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 11 [1/1] (0.42ns)   --->   "%store_ln11 = store i8 0, i8 %y" [Pool.cpp:11->CNN.cpp:35]   --->   Operation 11 'store' 'store_ln11' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end.i.i.i.i"   --->   Operation 12 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten20_load = load i10 %indvar_flatten20" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 13 'load' 'indvar_flatten20_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.78ns)   --->   "%icmp_ln8 = icmp_eq  i10 %indvar_flatten20_load, i10 640" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 14 'icmp' 'icmp_ln8' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.78ns)   --->   "%add_ln8 = add i10 %indvar_flatten20_load, i10 1" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 15 'add' 'add_ln8' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln8 = br i1 %icmp_ln8, void %for.inc19.i, void %for.body4.i66.preheader.exitStub" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 16 'br' 'br_ln8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%y_load = load i8 %y" [Pool.cpp:11->CNN.cpp:35]   --->   Operation 17 'load' 'y_load' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%z_load = load i3 %z" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 18 'load' 'z_load' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.76ns)   --->   "%icmp_ln11 = icmp_eq  i8 %y_load, i8 160" [Pool.cpp:11->CNN.cpp:35]   --->   Operation 19 'icmp' 'icmp_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.39ns)   --->   "%select_ln8 = select i1 %icmp_ln11, i8 0, i8 %y_load" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 20 'select' 'select_ln8' <Predicate = (!icmp_ln8)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.67ns)   --->   "%add_ln8_1 = add i3 %z_load, i3 1" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 21 'add' 'add_ln8_1' <Predicate = (!icmp_ln8)> <Delay = 0.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.20ns)   --->   "%select_ln8_1 = select i1 %icmp_ln11, i3 %add_ln8_1, i3 %z_load" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 22 'select' 'select_ln8_1' <Predicate = (!icmp_ln8)> <Delay = 0.20> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.20> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%empty = trunc i3 %select_ln8_1" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 23 'trunc' 'empty' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%tmp_4 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i2.i2.i6, i2 %empty, i2 %empty, i6 0" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 24 'bitconcatenate' 'tmp_4' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_cast79 = zext i10 %tmp_4" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 25 'zext' 'p_cast79' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_s = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %select_ln8, i1 0" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 26 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i9 %tmp_s" [Pool.cpp:15->CNN.cpp:35]   --->   Operation 27 'zext' 'zext_ln15' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.78ns)   --->   "%add_ln15 = add i11 %zext_ln15, i11 %p_cast79" [Pool.cpp:15->CNN.cpp:35]   --->   Operation 28 'add' 'add_ln15' <Predicate = (!icmp_ln8)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i11 %add_ln15" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 29 'zext' 'zext_ln16' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%OutConv1_addr = getelementptr i16 %OutConv1, i64 0, i64 %zext_ln16" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 30 'getelementptr' 'OutConv1_addr' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 31 [2/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv1_addr" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 31 'load' 'pool_value' <Predicate = (!icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_1 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node add_ln15_1)   --->   "%or_ln15 = or i10 %tmp_4, i10 1" [Pool.cpp:15->CNN.cpp:35]   --->   Operation 32 'or' 'or_ln15' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node add_ln15_1)   --->   "%zext_ln15_1 = zext i10 %or_ln15" [Pool.cpp:15->CNN.cpp:35]   --->   Operation 33 'zext' 'zext_ln15_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.78ns) (out node of the LUT)   --->   "%add_ln15_1 = add i11 %zext_ln15, i11 %zext_ln15_1" [Pool.cpp:15->CNN.cpp:35]   --->   Operation 34 'add' 'add_ln15_1' <Predicate = (!icmp_ln8)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln16_1 = zext i11 %add_ln15_1" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 35 'zext' 'zext_ln16_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%OutConv1_addr_1 = getelementptr i16 %OutConv1, i64 0, i64 %zext_ln16_1" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 36 'getelementptr' 'OutConv1_addr_1' <Predicate = (!icmp_ln8)> <Delay = 0.00>
ST_1 : Operation 37 [2/2] (1.23ns)   --->   "%pool_value_4 = load i11 %OutConv1_addr_1" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 37 'load' 'pool_value_4' <Predicate = (!icmp_ln8)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_1 : Operation 38 [1/1] (0.76ns)   --->   "%add_ln21 = add i8 %select_ln8, i8 1" [Pool.cpp:21->CNN.cpp:35]   --->   Operation 38 'add' 'add_ln21' <Predicate = (!icmp_ln8)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln8 = store i10 %add_ln8, i10 %indvar_flatten20" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 39 'store' 'store_ln8' <Predicate = (!icmp_ln8)> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln8 = store i3 %select_ln8_1, i3 %z" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 40 'store' 'store_ln8' <Predicate = (!icmp_ln8)> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.42ns)   --->   "%store_ln11 = store i8 %add_ln21, i8 %y" [Pool.cpp:11->CNN.cpp:35]   --->   Operation 41 'store' 'store_ln11' <Predicate = (!icmp_ln8)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 2.44>
ST_2 : Operation 42 [1/2] (1.23ns)   --->   "%pool_value = load i11 %OutConv1_addr" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 42 'load' 'pool_value' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_2 : Operation 43 [1/1] (0.85ns)   --->   "%icmp_ln17 = icmp_sgt  i16 %pool_value, i16 62976" [Pool.cpp:17->CNN.cpp:35]   --->   Operation 43 'icmp' 'icmp_ln17' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.35ns)   --->   "%max = select i1 %icmp_ln17, i16 %pool_value, i16 62976" [Pool.cpp:17->CNN.cpp:35]   --->   Operation 44 'select' 'max' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 45 [1/2] (1.23ns)   --->   "%pool_value_4 = load i11 %OutConv1_addr_1" [Pool.cpp:16->CNN.cpp:35]   --->   Operation 45 'load' 'pool_value_4' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 1280> <RAM>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 62 'ret' 'ret_ln0' <Predicate = (icmp_ln8)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.77>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @loop_for_channel_pool_0_loop_for_weight_pool_0_str"   --->   Operation 46 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 640, i64 640, i64 640"   --->   Operation 47 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%p_shl9 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i2.i7, i2 %empty, i7 0" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 48 'bitconcatenate' 'p_shl9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%p_shl9_cast = zext i9 %p_shl9" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 49 'zext' 'p_shl9_cast' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%p_shl3 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i2.i5, i2 %empty, i5 0" [Pool.cpp:8->CNN.cpp:35]   --->   Operation 50 'bitconcatenate' 'p_shl3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i7 %p_shl3" [Pool.cpp:11->CNN.cpp:35]   --->   Operation 51 'zext' 'zext_ln11' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%specpipeline_ln6 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_7" [Pool.cpp:6->CNN.cpp:35]   --->   Operation 52 'specpipeline' 'specpipeline_ln6' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.85ns)   --->   "%icmp_ln17_1 = icmp_sgt  i16 %pool_value_4, i16 %max" [Pool.cpp:17->CNN.cpp:35]   --->   Operation 53 'icmp' 'icmp_ln17_1' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.35ns)   --->   "%max_4 = select i1 %icmp_ln17_1, i16 %pool_value_4, i16 %max" [Pool.cpp:17->CNN.cpp:35]   --->   Operation 54 'select' 'max_4' <Predicate = true> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.35> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.76ns)   --->   "%add_ln19_1 = add i8 %zext_ln11, i8 %select_ln8" [Pool.cpp:19->CNN.cpp:35]   --->   Operation 55 'add' 'add_ln19_1' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%zext_ln19 = zext i8 %add_ln19_1" [Pool.cpp:19->CNN.cpp:35]   --->   Operation 56 'zext' 'zext_ln19' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.77ns)   --->   "%add_ln19 = add i10 %zext_ln19, i10 %p_shl9_cast" [Pool.cpp:19->CNN.cpp:35]   --->   Operation 57 'add' 'add_ln19' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln20 = zext i10 %add_ln19" [Pool.cpp:20->CNN.cpp:35]   --->   Operation 58 'zext' 'zext_ln20' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%OutPool0_addr = getelementptr i16 %OutPool0, i64 0, i64 %zext_ln20" [Pool.cpp:20->CNN.cpp:35]   --->   Operation 59 'getelementptr' 'OutPool0_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (1.23ns)   --->   "%store_ln20 = store i16 %max_4, i10 %OutPool0_addr" [Pool.cpp:20->CNN.cpp:35]   --->   Operation 60 'store' 'store_ln20' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 640> <RAM>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%br_ln11 = br void %if.end.i.i.i.i" [Pool.cpp:11->CNN.cpp:35]   --->   Operation 61 'br' 'br_ln11' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5.000ns, clock uncertainty: 1.350ns.

 <State 1>: 3.609ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln11', Pool.cpp:11->CNN.cpp:35) of constant 0 on local variable 'y', Pool.cpp:11->CNN.cpp:35 [8]  (0.427 ns)
	'load' operation 8 bit ('y_load', Pool.cpp:11->CNN.cpp:35) on local variable 'y', Pool.cpp:11->CNN.cpp:35 [16]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln11', Pool.cpp:11->CNN.cpp:35) [20]  (0.765 ns)
	'select' operation 8 bit ('select_ln8', Pool.cpp:8->CNN.cpp:35) [21]  (0.393 ns)
	'add' operation 11 bit ('add_ln15', Pool.cpp:15->CNN.cpp:35) [34]  (0.787 ns)
	'getelementptr' operation 11 bit ('OutConv1_addr', Pool.cpp:16->CNN.cpp:35) [36]  (0.000 ns)
	'load' operation 16 bit ('pool_value', Pool.cpp:16->CNN.cpp:35) on array 'OutConv1' [37]  (1.237 ns)

 <State 2>: 2.447ns
The critical path consists of the following:
	'load' operation 16 bit ('pool_value', Pool.cpp:16->CNN.cpp:35) on array 'OutConv1' [37]  (1.237 ns)
	'icmp' operation 1 bit ('icmp_ln17', Pool.cpp:17->CNN.cpp:35) [38]  (0.853 ns)
	'select' operation 16 bit ('max', Pool.cpp:17->CNN.cpp:35) [39]  (0.357 ns)

 <State 3>: 2.778ns
The critical path consists of the following:
	'add' operation 8 bit ('add_ln19_1', Pool.cpp:19->CNN.cpp:35) [48]  (0.765 ns)
	'add' operation 10 bit ('add_ln19', Pool.cpp:19->CNN.cpp:35) [50]  (0.776 ns)
	'getelementptr' operation 10 bit ('OutPool0_addr', Pool.cpp:20->CNN.cpp:35) [52]  (0.000 ns)
	'store' operation 0 bit ('store_ln20', Pool.cpp:20->CNN.cpp:35) of variable 'max', Pool.cpp:17->CNN.cpp:35 on array 'OutPool0' [53]  (1.237 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
