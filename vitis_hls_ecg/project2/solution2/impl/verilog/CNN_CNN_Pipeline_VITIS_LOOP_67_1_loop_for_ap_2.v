// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_67_1_loop_for_ap_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Weights_address0,
        Weights_ce0,
        Weights_q0,
        Weights_address1,
        Weights_ce1,
        Weights_q1,
        OutPadConv2_address0,
        OutPadConv2_ce0,
        OutPadConv2_q0,
        OutPadConv2_address1,
        OutPadConv2_ce1,
        OutPadConv2_q1,
        OutConv2_address0,
        OutConv2_ce0,
        OutConv2_we0,
        OutConv2_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 11'd1;
parameter    ap_ST_fsm_pp0_stage1 = 11'd2;
parameter    ap_ST_fsm_pp0_stage2 = 11'd4;
parameter    ap_ST_fsm_pp0_stage3 = 11'd8;
parameter    ap_ST_fsm_pp0_stage4 = 11'd16;
parameter    ap_ST_fsm_pp0_stage5 = 11'd32;
parameter    ap_ST_fsm_pp0_stage6 = 11'd64;
parameter    ap_ST_fsm_pp0_stage7 = 11'd128;
parameter    ap_ST_fsm_pp0_stage8 = 11'd256;
parameter    ap_ST_fsm_pp0_stage9 = 11'd512;
parameter    ap_ST_fsm_pp0_stage10 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Weights_address0;
output   Weights_ce0;
input  [15:0] Weights_q0;
output  [13:0] Weights_address1;
output   Weights_ce1;
input  [15:0] Weights_q1;
output  [9:0] OutPadConv2_address0;
output   OutPadConv2_ce0;
input  [15:0] OutPadConv2_q0;
output  [9:0] OutPadConv2_address1;
output   OutPadConv2_ce1;
input  [15:0] OutPadConv2_q1;
output  [10:0] OutConv2_address0;
output   OutConv2_ce0;
output   OutConv2_we0;
output  [15:0] OutConv2_d0;

reg ap_idle;
reg[13:0] Weights_address0;
reg Weights_ce0;
reg[13:0] Weights_address1;
reg Weights_ce1;
reg[9:0] OutPadConv2_address0;
reg OutPadConv2_ce0;
reg[9:0] OutPadConv2_address1;
reg OutPadConv2_ce1;
reg OutConv2_ce0;
reg OutConv2_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_subdone;
reg   [0:0] icmp_ln67_reg_1848;
reg    ap_condition_exit_pp0_iter0_stage10;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg  signed [15:0] reg_523;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
reg  signed [15:0] reg_527;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
reg  signed [15:0] reg_532;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
reg  signed [15:0] reg_537;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
reg  signed [15:0] reg_542;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
reg  signed [15:0] reg_547;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
reg  signed [15:0] reg_552;
reg  signed [15:0] reg_557;
wire    ap_block_pp0_stage10_11001;
wire   [0:0] icmp_ln67_fu_580_p2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln67_reg_1848_pp0_iter1_reg;
reg   [3:0] n_load_reg_1852;
wire   [0:0] icmp_ln69_fu_598_p2;
reg   [0:0] icmp_ln69_reg_1857;
wire   [7:0] select_ln67_fu_604_p3;
reg   [7:0] select_ln67_reg_1862;
wire   [3:0] add_ln67_1_fu_612_p2;
reg   [3:0] add_ln67_1_reg_1871;
wire   [3:0] select_ln67_1_fu_644_p3;
reg   [3:0] select_ln67_1_reg_1886;
wire   [2:0] empty_fu_649_p1;
reg   [2:0] empty_reg_1891;
wire   [7:0] empty_156_fu_677_p2;
reg   [7:0] empty_156_reg_1897;
wire   [8:0] zext_ln69_3_fu_730_p1;
reg   [8:0] zext_ln69_3_reg_1928;
reg   [15:0] tmp_45_reg_1952;
wire   [8:0] p_cast86_fu_909_p1;
reg   [8:0] p_cast86_reg_2042;
reg  signed [15:0] OutPadConv2_load_9_reg_2081;
reg  signed [15:0] OutPadConv2_load_11_reg_2121;
wire   [9:0] zext_ln69_2_fu_1066_p1;
reg   [9:0] zext_ln69_2_reg_2136;
reg  signed [15:0] Weights_load_39_reg_2159;
reg  signed [15:0] OutPadConv2_load_12_reg_2169;
reg  signed [15:0] OutPadConv2_load_13_reg_2179;
wire   [10:0] add_ln77_1_fu_1144_p2;
reg   [10:0] add_ln77_1_reg_2194;
reg   [10:0] add_ln77_1_reg_2194_pp0_iter1_reg;
reg  signed [15:0] Weights_load_41_reg_2214;
reg  signed [15:0] OutPadConv2_load_15_reg_2229;
reg  signed [15:0] Weights_load_43_reg_2259;
reg  signed [15:0] OutPadConv2_load_16_reg_2269;
reg  signed [15:0] OutPadConv2_load_17_reg_2279;
reg  signed [15:0] Weights_load_45_reg_2309;
reg  signed [15:0] OutPadConv2_load_18_reg_2319;
reg  signed [15:0] OutPadConv2_load_19_reg_2329;
reg  signed [15:0] Weights_load_46_reg_2354;
reg  signed [15:0] Weights_load_47_reg_2359;
reg  signed [15:0] Weights_load_27_reg_2364;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln69_1_fu_618_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln75_1_fu_629_p1;
wire   [63:0] zext_ln75_fu_689_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln75_2_fu_700_p1;
wire   [63:0] zext_ln75_3_fu_710_p1;
wire   [63:0] zext_ln75_5_fu_720_p1;
wire   [63:0] zext_ln75_4_fu_770_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln75_6_fu_780_p1;
wire   [63:0] zext_ln75_7_fu_790_p1;
wire   [63:0] zext_ln75_9_fu_801_p1;
wire   [63:0] zext_ln75_8_fu_819_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln75_10_fu_829_p1;
wire   [63:0] zext_ln75_11_fu_839_p1;
wire   [63:0] zext_ln75_13_fu_849_p1;
wire   [63:0] zext_ln75_12_fu_874_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln75_14_fu_884_p1;
wire   [63:0] zext_ln75_15_fu_894_p1;
wire   [63:0] zext_ln75_17_fu_904_p1;
wire   [63:0] zext_ln75_16_fu_943_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln75_18_fu_954_p1;
wire   [63:0] zext_ln75_19_fu_964_p1;
wire   [63:0] zext_ln75_21_fu_974_p1;
wire   [63:0] zext_ln75_20_fu_1009_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln75_22_fu_1019_p1;
wire   [63:0] zext_ln75_23_fu_1029_p1;
wire   [63:0] zext_ln75_25_fu_1039_p1;
wire   [63:0] zext_ln75_24_fu_1099_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln75_26_fu_1109_p1;
wire   [63:0] zext_ln75_27_fu_1119_p1;
wire   [63:0] zext_ln75_29_fu_1130_p1;
wire   [63:0] zext_ln75_28_fu_1180_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln75_30_fu_1190_p1;
wire   [63:0] zext_ln75_31_fu_1200_p1;
wire   [63:0] zext_ln75_33_fu_1210_p1;
wire   [63:0] zext_ln75_32_fu_1245_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln75_34_fu_1255_p1;
wire   [63:0] zext_ln75_35_fu_1265_p1;
wire   [63:0] zext_ln75_37_fu_1275_p1;
wire   [63:0] zext_ln75_36_fu_1309_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln75_38_fu_1319_p1;
wire   [63:0] arrayidx17_sum_cast_fu_1333_p1;
wire   [63:0] zext_ln77_1_fu_1638_p1;
reg   [7:0] y_fu_152;
wire   [7:0] add_ln75_1_fu_623_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_y_load;
reg   [3:0] n_fu_156;
reg   [3:0] ap_sig_allocacmp_n_load;
reg   [10:0] indvar_flatten34_fu_160;
wire   [10:0] add_ln67_fu_586_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten34_load;
wire   [6:0] p_shl4_fu_653_p3;
wire   [4:0] p_shl7_fu_665_p3;
wire   [7:0] p_shl17_cast_fu_661_p1;
wire   [7:0] p_shl18_cast_fu_673_p1;
wire   [7:0] add_ln75_fu_683_p2;
wire   [7:0] add_ln75_2_fu_694_p2;
wire   [7:0] add_ln75_4_fu_705_p2;
wire   [7:0] add_ln75_7_fu_715_p2;
wire   [23:0] mul_ln75_fu_741_p2;
wire   [7:0] add_ln75_5_fu_765_p2;
wire   [7:0] add_ln75_8_fu_775_p2;
wire   [7:0] add_ln75_10_fu_785_p2;
wire   [8:0] add_ln75_13_fu_795_p2;
wire   [7:0] add_ln75_11_fu_814_p2;
wire   [7:0] add_ln75_14_fu_824_p2;
wire   [8:0] add_ln75_16_fu_834_p2;
wire   [8:0] add_ln75_19_fu_844_p2;
wire   [7:0] add_ln75_17_fu_869_p2;
wire   [7:0] add_ln75_20_fu_879_p2;
wire   [8:0] add_ln75_22_fu_889_p2;
wire   [8:0] add_ln75_25_fu_899_p2;
wire  signed [23:0] tmp_46_fu_912_p1;
wire   [23:0] grp_fu_1656_p3;
wire   [15:0] tmp_46_fu_912_p4;
wire   [8:0] add_ln75_23_fu_937_p2;
wire   [8:0] add_ln75_26_fu_948_p2;
wire   [8:0] add_ln75_28_fu_959_p2;
wire   [8:0] add_ln75_31_fu_969_p2;
wire  signed [23:0] tmp_47_fu_979_p1;
wire   [23:0] grp_fu_1665_p3;
wire   [15:0] tmp_47_fu_979_p4;
wire   [8:0] add_ln75_29_fu_1004_p2;
wire   [8:0] add_ln75_32_fu_1014_p2;
wire   [8:0] add_ln75_34_fu_1024_p2;
wire   [8:0] add_ln75_37_fu_1034_p2;
wire   [9:0] p_shl8_fu_1044_p3;
wire   [7:0] p_shl10_fu_1055_p3;
wire  signed [23:0] tmp_48_fu_1069_p1;
wire   [23:0] grp_fu_1674_p3;
wire   [15:0] tmp_48_fu_1069_p4;
wire   [8:0] add_ln75_35_fu_1094_p2;
wire   [8:0] add_ln75_38_fu_1104_p2;
wire   [8:0] add_ln75_40_fu_1114_p2;
wire   [9:0] add_ln75_43_fu_1124_p2;
wire   [8:0] zext_ln69_fu_1062_p1;
wire   [8:0] add_ln77_3_fu_1135_p2;
wire   [10:0] zext_ln77_fu_1140_p1;
wire   [10:0] p_shl15_cast_fu_1051_p1;
wire  signed [23:0] tmp_49_fu_1150_p1;
wire   [23:0] grp_fu_1683_p3;
wire   [15:0] tmp_49_fu_1150_p4;
wire   [8:0] add_ln75_41_fu_1175_p2;
wire   [8:0] add_ln75_44_fu_1185_p2;
wire   [9:0] add_ln75_46_fu_1195_p2;
wire   [9:0] add_ln75_49_fu_1205_p2;
wire  signed [23:0] tmp_50_fu_1215_p1;
wire   [23:0] grp_fu_1692_p3;
wire   [15:0] tmp_50_fu_1215_p4;
wire   [8:0] add_ln75_47_fu_1240_p2;
wire   [8:0] add_ln75_50_fu_1250_p2;
wire   [9:0] add_ln75_52_fu_1260_p2;
wire   [9:0] add_ln75_55_fu_1270_p2;
wire  signed [23:0] tmp_51_fu_1280_p1;
wire   [23:0] grp_fu_1701_p3;
wire   [15:0] tmp_51_fu_1280_p4;
wire   [8:0] add_ln75_53_fu_1304_p2;
wire   [8:0] add_ln75_56_fu_1314_p2;
wire   [8:0] zext_ln67_fu_1324_p1;
wire   [8:0] arrayidx17_sum_fu_1327_p2;
wire  signed [23:0] tmp_52_fu_1338_p1;
wire   [23:0] grp_fu_1710_p3;
wire   [15:0] tmp_52_fu_1338_p4;
wire  signed [23:0] tmp_53_fu_1363_p1;
wire   [23:0] grp_fu_1719_p3;
wire   [15:0] tmp_53_fu_1363_p4;
wire  signed [23:0] tmp_54_fu_1386_p1;
wire   [23:0] grp_fu_1728_p3;
wire   [15:0] tmp_54_fu_1386_p4;
wire  signed [23:0] tmp_55_fu_1410_p1;
wire   [23:0] grp_fu_1737_p3;
wire   [15:0] tmp_55_fu_1410_p4;
wire  signed [23:0] tmp_56_fu_1433_p1;
wire   [23:0] grp_fu_1746_p3;
wire   [15:0] tmp_56_fu_1433_p4;
wire  signed [23:0] tmp_57_fu_1458_p1;
wire   [23:0] grp_fu_1755_p3;
wire   [15:0] tmp_57_fu_1458_p4;
wire  signed [23:0] tmp_58_fu_1481_p1;
wire   [23:0] grp_fu_1764_p3;
wire   [15:0] tmp_58_fu_1481_p4;
wire  signed [23:0] tmp_59_fu_1505_p1;
wire   [23:0] grp_fu_1773_p3;
wire   [15:0] tmp_59_fu_1505_p4;
wire  signed [23:0] tmp_60_fu_1528_p1;
wire   [23:0] grp_fu_1782_p3;
wire   [15:0] tmp_60_fu_1528_p4;
wire  signed [23:0] tmp_61_fu_1551_p1;
wire   [23:0] grp_fu_1791_p3;
wire   [15:0] tmp_61_fu_1551_p4;
wire  signed [23:0] tmp_62_fu_1574_p1;
wire   [23:0] grp_fu_1800_p3;
wire   [15:0] tmp_62_fu_1574_p4;
wire  signed [23:0] tmp_63_fu_1591_p1;
wire   [23:0] grp_fu_1809_p3;
wire   [15:0] tmp_63_fu_1591_p4;
wire  signed [23:0] s_fu_1611_p1;
wire   [23:0] grp_fu_1818_p3;
wire  signed [15:0] s_fu_1611_p4;
wire  signed [16:0] sext_ln77_fu_1620_p1;
wire  signed [16:0] conv_i_i13_i93_i81_fu_1608_p1;
wire   [16:0] add_ln77_fu_1624_p2;
wire   [0:0] tmp_fu_1630_p3;
wire   [15:0] add_ln77_2_fu_1642_p2;
wire   [23:0] grp_fu_1656_p2;
wire   [23:0] grp_fu_1665_p2;
wire   [23:0] grp_fu_1674_p2;
wire   [23:0] grp_fu_1683_p2;
wire   [23:0] grp_fu_1692_p2;
wire   [23:0] grp_fu_1701_p2;
wire   [23:0] grp_fu_1710_p2;
wire   [23:0] grp_fu_1719_p2;
wire   [23:0] grp_fu_1728_p2;
wire   [23:0] grp_fu_1737_p2;
wire   [23:0] grp_fu_1746_p2;
wire   [23:0] grp_fu_1755_p2;
wire   [23:0] grp_fu_1764_p2;
wire   [23:0] grp_fu_1773_p2;
wire   [23:0] grp_fu_1782_p2;
wire   [23:0] grp_fu_1791_p2;
wire   [23:0] grp_fu_1800_p2;
wire   [23:0] grp_fu_1809_p2;
wire   [23:0] grp_fu_1818_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage1;
reg    ap_idle_pp0_0to0;
reg   [10:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 y_fu_152 = 8'd0;
#0 n_fu_156 = 4'd0;
#0 indvar_flatten34_fu_160 = 11'd0;
#0 ap_done_reg = 1'b0;
end

CNN_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U46(
    .din0(reg_523),
    .din1(Weights_q1),
    .dout(mul_ln75_fu_741_p2)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_527),
    .din1(Weights_q0),
    .din2(grp_fu_1656_p2),
    .ce(1'b1),
    .dout(grp_fu_1656_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_523),
    .din1(Weights_q0),
    .din2(grp_fu_1665_p2),
    .ce(1'b1),
    .dout(grp_fu_1665_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_527),
    .din1(reg_532),
    .din2(grp_fu_1674_p2),
    .ce(1'b1),
    .dout(grp_fu_1674_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_523),
    .din1(reg_532),
    .din2(grp_fu_1683_p2),
    .ce(1'b1),
    .dout(grp_fu_1683_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_537),
    .din1(reg_542),
    .din2(grp_fu_1692_p2),
    .ce(1'b1),
    .dout(grp_fu_1692_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_527),
    .din1(reg_532),
    .din2(grp_fu_1701_p2),
    .ce(1'b1),
    .dout(grp_fu_1701_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_547),
    .din1(reg_552),
    .din2(grp_fu_1710_p2),
    .ce(1'b1),
    .dout(grp_fu_1710_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_523),
    .din1(reg_542),
    .din2(grp_fu_1719_p2),
    .ce(1'b1),
    .dout(grp_fu_1719_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_9_reg_2081),
    .din1(reg_557),
    .din2(grp_fu_1728_p2),
    .ce(1'b1),
    .dout(grp_fu_1728_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_537),
    .din1(reg_532),
    .din2(grp_fu_1737_p2),
    .ce(1'b1),
    .dout(grp_fu_1737_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_11_reg_2121),
    .din1(Weights_load_39_reg_2159),
    .din2(grp_fu_1746_p2),
    .ce(1'b1),
    .dout(grp_fu_1746_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_12_reg_2169),
    .din1(reg_552),
    .din2(grp_fu_1755_p2),
    .ce(1'b1),
    .dout(grp_fu_1755_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_13_reg_2179),
    .din1(Weights_load_41_reg_2214),
    .din2(grp_fu_1764_p2),
    .ce(1'b1),
    .dout(grp_fu_1764_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_547),
    .din1(reg_542),
    .din2(grp_fu_1773_p2),
    .ce(1'b1),
    .dout(grp_fu_1773_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_15_reg_2229),
    .din1(Weights_load_43_reg_2259),
    .din2(grp_fu_1782_p2),
    .ce(1'b1),
    .dout(grp_fu_1782_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_16_reg_2269),
    .din1(reg_557),
    .din2(grp_fu_1791_p2),
    .ce(1'b1),
    .dout(grp_fu_1791_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_17_reg_2279),
    .din1(Weights_load_45_reg_2309),
    .din2(grp_fu_1800_p2),
    .ce(1'b1),
    .dout(grp_fu_1800_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_18_reg_2319),
    .din1(Weights_load_46_reg_2354),
    .din2(grp_fu_1809_p2),
    .ce(1'b1),
    .dout(grp_fu_1809_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv2_load_19_reg_2329),
    .din1(Weights_load_47_reg_2359),
    .din2(grp_fu_1818_p2),
    .ce(1'b1),
    .dout(grp_fu_1818_p3)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage10),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage1) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln67_fu_580_p2 == 1'd0))) begin
            indvar_flatten34_fu_160 <= add_ln67_fu_586_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten34_fu_160 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        n_fu_156 <= 4'd0;
    end else if (((icmp_ln67_reg_1848 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        n_fu_156 <= select_ln67_1_fu_644_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        reg_527 <= OutPadConv2_q1;
    end else if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_527 <= OutPadConv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_532 <= Weights_q0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_532 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            reg_537 <= OutPadConv2_q1;
        end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            reg_537 <= OutPadConv2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_542 <= Weights_q0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        reg_542 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            reg_547 <= OutPadConv2_q1;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            reg_547 <= OutPadConv2_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            reg_552 <= Weights_q0;
        end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            reg_552 <= Weights_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            reg_557 <= Weights_q0;
        end else if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            reg_557 <= Weights_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln67_fu_580_p2 == 1'd0))) begin
            y_fu_152 <= add_ln75_1_fu_623_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_152 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        OutPadConv2_load_11_reg_2121 <= OutPadConv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        OutPadConv2_load_12_reg_2169 <= OutPadConv2_q1;
        OutPadConv2_load_13_reg_2179 <= OutPadConv2_q0;
        Weights_load_39_reg_2159 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        OutPadConv2_load_15_reg_2229 <= OutPadConv2_q0;
        Weights_load_41_reg_2214 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        OutPadConv2_load_16_reg_2269 <= OutPadConv2_q1;
        OutPadConv2_load_17_reg_2279 <= OutPadConv2_q0;
        Weights_load_43_reg_2259 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        OutPadConv2_load_18_reg_2319 <= OutPadConv2_q1;
        OutPadConv2_load_19_reg_2329 <= OutPadConv2_q0;
        Weights_load_45_reg_2309 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        OutPadConv2_load_9_reg_2081 <= OutPadConv2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_load_27_reg_2364 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_load_46_reg_2354 <= Weights_q0;
        Weights_load_47_reg_2359 <= Weights_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln67_1_reg_1871 <= add_ln67_1_fu_612_p2;
        icmp_ln67_reg_1848 <= icmp_ln67_fu_580_p2;
        icmp_ln67_reg_1848_pp0_iter1_reg <= icmp_ln67_reg_1848;
        icmp_ln69_reg_1857 <= icmp_ln69_fu_598_p2;
        n_load_reg_1852 <= ap_sig_allocacmp_n_load;
        select_ln67_reg_1862 <= select_ln67_fu_604_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln77_1_reg_2194 <= add_ln77_1_fu_1144_p2;
        add_ln77_1_reg_2194_pp0_iter1_reg <= add_ln77_1_reg_2194;
        zext_ln69_2_reg_2136[7 : 0] <= zext_ln69_2_fu_1066_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_156_reg_1897[7 : 2] <= empty_156_fu_677_p2[7 : 2];
        empty_reg_1891 <= empty_fu_649_p1;
        select_ln67_1_reg_1886 <= select_ln67_1_fu_644_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        p_cast86_reg_2042[7 : 2] <= p_cast86_fu_909_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_523 <= OutPadConv2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_45_reg_1952 <= {{mul_ln75_fu_741_p2[23:8]}};
        zext_ln69_3_reg_1928[7 : 0] <= zext_ln69_3_fu_730_p1[7 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutConv2_ce0 = 1'b1;
    end else begin
        OutConv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        OutConv2_we0 = 1'b1;
    end else begin
        OutConv2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            OutPadConv2_address0 = zext_ln75_37_fu_1275_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            OutPadConv2_address0 = zext_ln75_33_fu_1210_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            OutPadConv2_address0 = zext_ln75_29_fu_1130_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            OutPadConv2_address0 = zext_ln75_25_fu_1039_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            OutPadConv2_address0 = zext_ln75_21_fu_974_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            OutPadConv2_address0 = zext_ln75_17_fu_904_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            OutPadConv2_address0 = zext_ln75_13_fu_849_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            OutPadConv2_address0 = zext_ln75_9_fu_801_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            OutPadConv2_address0 = zext_ln75_5_fu_720_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            OutPadConv2_address0 = zext_ln75_1_fu_629_p1;
        end else begin
            OutPadConv2_address0 = 'bx;
        end
    end else begin
        OutPadConv2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            OutPadConv2_address1 = zext_ln75_35_fu_1265_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            OutPadConv2_address1 = zext_ln75_31_fu_1200_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            OutPadConv2_address1 = zext_ln75_27_fu_1119_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            OutPadConv2_address1 = zext_ln75_23_fu_1029_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            OutPadConv2_address1 = zext_ln75_19_fu_964_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            OutPadConv2_address1 = zext_ln75_15_fu_894_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            OutPadConv2_address1 = zext_ln75_11_fu_839_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            OutPadConv2_address1 = zext_ln75_7_fu_790_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            OutPadConv2_address1 = zext_ln75_3_fu_710_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            OutPadConv2_address1 = zext_ln69_1_fu_618_p1;
        end else begin
            OutPadConv2_address1 = 'bx;
        end
    end else begin
        OutPadConv2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        OutPadConv2_ce0 = 1'b1;
    end else begin
        OutPadConv2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        OutPadConv2_ce1 = 1'b1;
    end else begin
        OutPadConv2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_address0 = arrayidx17_sum_cast_fu_1333_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        Weights_address0 = zext_ln75_36_fu_1309_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        Weights_address0 = zext_ln75_32_fu_1245_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        Weights_address0 = zext_ln75_28_fu_1180_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        Weights_address0 = zext_ln75_24_fu_1099_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        Weights_address0 = zext_ln75_20_fu_1009_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        Weights_address0 = zext_ln75_16_fu_943_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        Weights_address0 = zext_ln75_12_fu_874_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        Weights_address0 = zext_ln75_8_fu_819_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        Weights_address0 = zext_ln75_4_fu_770_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        Weights_address0 = zext_ln75_2_fu_700_p1;
    end else begin
        Weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            Weights_address1 = zext_ln75_38_fu_1319_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Weights_address1 = zext_ln75_34_fu_1255_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Weights_address1 = zext_ln75_30_fu_1190_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Weights_address1 = zext_ln75_26_fu_1109_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Weights_address1 = zext_ln75_22_fu_1019_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Weights_address1 = zext_ln75_18_fu_954_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Weights_address1 = zext_ln75_14_fu_884_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Weights_address1 = zext_ln75_10_fu_829_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Weights_address1 = zext_ln75_6_fu_780_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Weights_address1 = zext_ln75_fu_689_p1;
        end else begin
            Weights_address1 = 'bx;
        end
    end else begin
        Weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Weights_ce0 = 1'b1;
    end else begin
        Weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        Weights_ce1 = 1'b1;
    end else begin
        Weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln67_reg_1848 == 1'd1) & (1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln67_reg_1848_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten34_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten34_load = indvar_flatten34_fu_160;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_load = 4'd0;
    end else begin
        ap_sig_allocacmp_n_load = n_fu_156;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_load = 8'd0;
    end else begin
        ap_sig_allocacmp_y_load = y_fu_152;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage1) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutConv2_address0 = zext_ln77_1_fu_1638_p1;

assign OutConv2_d0 = ((tmp_fu_1630_p3[0:0] == 1'b1) ? 16'd0 : add_ln77_2_fu_1642_p2);

assign add_ln67_1_fu_612_p2 = (ap_sig_allocacmp_n_load + 4'd1);

assign add_ln67_fu_586_p2 = (ap_sig_allocacmp_indvar_flatten34_load + 11'd1);

assign add_ln75_10_fu_785_p2 = (select_ln67_reg_1862 + 8'd4);

assign add_ln75_11_fu_814_p2 = (empty_156_reg_1897 + 8'd112);

assign add_ln75_13_fu_795_p2 = (zext_ln69_3_fu_730_p1 + 9'd164);

assign add_ln75_14_fu_824_p2 = (empty_156_reg_1897 + 8'd113);

assign add_ln75_16_fu_834_p2 = (zext_ln69_3_reg_1928 + 9'd165);

assign add_ln75_17_fu_869_p2 = (empty_156_reg_1897 + 8'd114);

assign add_ln75_19_fu_844_p2 = (zext_ln69_3_reg_1928 + 9'd166);

assign add_ln75_1_fu_623_p2 = (select_ln67_fu_604_p3 + 8'd1);

assign add_ln75_20_fu_879_p2 = (empty_156_reg_1897 + 8'd115);

assign add_ln75_22_fu_889_p2 = (zext_ln69_3_reg_1928 + 9'd167);

assign add_ln75_23_fu_937_p2 = (p_cast86_fu_909_p1 + 9'd116);

assign add_ln75_25_fu_899_p2 = (zext_ln69_3_reg_1928 + 9'd168);

assign add_ln75_26_fu_948_p2 = (p_cast86_fu_909_p1 + 9'd117);

assign add_ln75_28_fu_959_p2 = ($signed(zext_ln69_3_reg_1928) + $signed(9'd328));

assign add_ln75_29_fu_1004_p2 = (p_cast86_reg_2042 + 9'd118);

assign add_ln75_2_fu_694_p2 = (empty_156_fu_677_p2 + 8'd109);

assign add_ln75_31_fu_969_p2 = ($signed(zext_ln69_3_reg_1928) + $signed(9'd329));

assign add_ln75_32_fu_1014_p2 = (p_cast86_reg_2042 + 9'd119);

assign add_ln75_34_fu_1024_p2 = ($signed(zext_ln69_3_reg_1928) + $signed(9'd330));

assign add_ln75_35_fu_1094_p2 = (p_cast86_reg_2042 + 9'd120);

assign add_ln75_37_fu_1034_p2 = ($signed(zext_ln69_3_reg_1928) + $signed(9'd331));

assign add_ln75_38_fu_1104_p2 = (p_cast86_reg_2042 + 9'd121);

assign add_ln75_40_fu_1114_p2 = ($signed(zext_ln69_3_reg_1928) + $signed(9'd332));

assign add_ln75_41_fu_1175_p2 = (p_cast86_reg_2042 + 9'd122);

assign add_ln75_43_fu_1124_p2 = (zext_ln69_2_fu_1066_p1 + 10'd492);

assign add_ln75_44_fu_1185_p2 = (p_cast86_reg_2042 + 9'd123);

assign add_ln75_46_fu_1195_p2 = (zext_ln69_2_reg_2136 + 10'd493);

assign add_ln75_47_fu_1240_p2 = (p_cast86_reg_2042 + 9'd124);

assign add_ln75_49_fu_1205_p2 = (zext_ln69_2_reg_2136 + 10'd494);

assign add_ln75_4_fu_705_p2 = (select_ln67_reg_1862 + 8'd2);

assign add_ln75_50_fu_1250_p2 = (p_cast86_reg_2042 + 9'd125);

assign add_ln75_52_fu_1260_p2 = (zext_ln69_2_reg_2136 + 10'd495);

assign add_ln75_53_fu_1304_p2 = (p_cast86_reg_2042 + 9'd126);

assign add_ln75_55_fu_1270_p2 = (zext_ln69_2_reg_2136 + 10'd496);

assign add_ln75_56_fu_1314_p2 = (p_cast86_reg_2042 + 9'd127);

assign add_ln75_5_fu_765_p2 = (empty_156_reg_1897 + 8'd110);

assign add_ln75_7_fu_715_p2 = (select_ln67_reg_1862 + 8'd3);

assign add_ln75_8_fu_775_p2 = (empty_156_reg_1897 + 8'd111);

assign add_ln75_fu_683_p2 = (empty_156_fu_677_p2 + 8'd108);

assign add_ln77_1_fu_1144_p2 = (zext_ln77_fu_1140_p1 + p_shl15_cast_fu_1051_p1);

assign add_ln77_2_fu_1642_p2 = ($signed(Weights_load_27_reg_2364) + $signed(s_fu_1611_p4));

assign add_ln77_3_fu_1135_p2 = (zext_ln69_fu_1062_p1 + zext_ln69_3_reg_1928);

assign add_ln77_fu_1624_p2 = ($signed(sext_ln77_fu_1620_p1) + $signed(conv_i_i13_i93_i81_fu_1608_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage10;

assign arrayidx17_sum_cast_fu_1333_p1 = arrayidx17_sum_fu_1327_p2;

assign arrayidx17_sum_fu_1327_p2 = ($signed(zext_ln67_fu_1324_p1) + $signed(9'd268));

assign conv_i_i13_i93_i81_fu_1608_p1 = Weights_load_27_reg_2364;

assign empty_156_fu_677_p2 = (p_shl17_cast_fu_661_p1 + p_shl18_cast_fu_673_p1);

assign empty_fu_649_p1 = select_ln67_1_fu_644_p3[2:0];

assign grp_fu_1656_p2 = {{tmp_45_reg_1952}, {8'd0}};

assign grp_fu_1665_p2 = {{tmp_46_fu_912_p4}, {8'd0}};

assign grp_fu_1674_p2 = {{tmp_47_fu_979_p4}, {8'd0}};

assign grp_fu_1683_p2 = {{tmp_48_fu_1069_p4}, {8'd0}};

assign grp_fu_1692_p2 = {{tmp_49_fu_1150_p4}, {8'd0}};

assign grp_fu_1701_p2 = {{tmp_50_fu_1215_p4}, {8'd0}};

assign grp_fu_1710_p2 = {{tmp_51_fu_1280_p4}, {8'd0}};

assign grp_fu_1719_p2 = {{tmp_52_fu_1338_p4}, {8'd0}};

assign grp_fu_1728_p2 = {{tmp_53_fu_1363_p4}, {8'd0}};

assign grp_fu_1737_p2 = {{tmp_54_fu_1386_p4}, {8'd0}};

assign grp_fu_1746_p2 = {{tmp_55_fu_1410_p4}, {8'd0}};

assign grp_fu_1755_p2 = {{tmp_56_fu_1433_p4}, {8'd0}};

assign grp_fu_1764_p2 = {{tmp_57_fu_1458_p4}, {8'd0}};

assign grp_fu_1773_p2 = {{tmp_58_fu_1481_p4}, {8'd0}};

assign grp_fu_1782_p2 = {{tmp_59_fu_1505_p4}, {8'd0}};

assign grp_fu_1791_p2 = {{tmp_60_fu_1528_p4}, {8'd0}};

assign grp_fu_1800_p2 = {{tmp_61_fu_1551_p4}, {8'd0}};

assign grp_fu_1809_p2 = {{tmp_62_fu_1574_p4}, {8'd0}};

assign grp_fu_1818_p2 = {{tmp_63_fu_1591_p4}, {8'd0}};

assign icmp_ln67_fu_580_p2 = ((ap_sig_allocacmp_indvar_flatten34_load == 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_598_p2 = ((ap_sig_allocacmp_y_load == 8'd160) ? 1'b1 : 1'b0);

assign p_cast86_fu_909_p1 = empty_156_reg_1897;

assign p_shl10_fu_1055_p3 = {{empty_reg_1891}, {5'd0}};

assign p_shl15_cast_fu_1051_p1 = p_shl8_fu_1044_p3;

assign p_shl17_cast_fu_661_p1 = p_shl4_fu_653_p3;

assign p_shl18_cast_fu_673_p1 = p_shl7_fu_665_p3;

assign p_shl4_fu_653_p3 = {{empty_fu_649_p1}, {4'd0}};

assign p_shl7_fu_665_p3 = {{empty_fu_649_p1}, {2'd0}};

assign p_shl8_fu_1044_p3 = {{empty_reg_1891}, {7'd0}};

assign s_fu_1611_p1 = grp_fu_1818_p3;

assign s_fu_1611_p4 = {{s_fu_1611_p1[23:8]}};

assign select_ln67_1_fu_644_p3 = ((icmp_ln69_reg_1857[0:0] == 1'b1) ? add_ln67_1_reg_1871 : n_load_reg_1852);

assign select_ln67_fu_604_p3 = ((icmp_ln69_fu_598_p2[0:0] == 1'b1) ? 8'd0 : ap_sig_allocacmp_y_load);

assign sext_ln77_fu_1620_p1 = s_fu_1611_p4;

assign tmp_46_fu_912_p1 = grp_fu_1656_p3;

assign tmp_46_fu_912_p4 = {{tmp_46_fu_912_p1[23:8]}};

assign tmp_47_fu_979_p1 = grp_fu_1665_p3;

assign tmp_47_fu_979_p4 = {{tmp_47_fu_979_p1[23:8]}};

assign tmp_48_fu_1069_p1 = grp_fu_1674_p3;

assign tmp_48_fu_1069_p4 = {{tmp_48_fu_1069_p1[23:8]}};

assign tmp_49_fu_1150_p1 = grp_fu_1683_p3;

assign tmp_49_fu_1150_p4 = {{tmp_49_fu_1150_p1[23:8]}};

assign tmp_50_fu_1215_p1 = grp_fu_1692_p3;

assign tmp_50_fu_1215_p4 = {{tmp_50_fu_1215_p1[23:8]}};

assign tmp_51_fu_1280_p1 = grp_fu_1701_p3;

assign tmp_51_fu_1280_p4 = {{tmp_51_fu_1280_p1[23:8]}};

assign tmp_52_fu_1338_p1 = grp_fu_1710_p3;

assign tmp_52_fu_1338_p4 = {{tmp_52_fu_1338_p1[23:8]}};

assign tmp_53_fu_1363_p1 = grp_fu_1719_p3;

assign tmp_53_fu_1363_p4 = {{tmp_53_fu_1363_p1[23:8]}};

assign tmp_54_fu_1386_p1 = grp_fu_1728_p3;

assign tmp_54_fu_1386_p4 = {{tmp_54_fu_1386_p1[23:8]}};

assign tmp_55_fu_1410_p1 = grp_fu_1737_p3;

assign tmp_55_fu_1410_p4 = {{tmp_55_fu_1410_p1[23:8]}};

assign tmp_56_fu_1433_p1 = grp_fu_1746_p3;

assign tmp_56_fu_1433_p4 = {{tmp_56_fu_1433_p1[23:8]}};

assign tmp_57_fu_1458_p1 = grp_fu_1755_p3;

assign tmp_57_fu_1458_p4 = {{tmp_57_fu_1458_p1[23:8]}};

assign tmp_58_fu_1481_p1 = grp_fu_1764_p3;

assign tmp_58_fu_1481_p4 = {{tmp_58_fu_1481_p1[23:8]}};

assign tmp_59_fu_1505_p1 = grp_fu_1773_p3;

assign tmp_59_fu_1505_p4 = {{tmp_59_fu_1505_p1[23:8]}};

assign tmp_60_fu_1528_p1 = grp_fu_1782_p3;

assign tmp_60_fu_1528_p4 = {{tmp_60_fu_1528_p1[23:8]}};

assign tmp_61_fu_1551_p1 = grp_fu_1791_p3;

assign tmp_61_fu_1551_p4 = {{tmp_61_fu_1551_p1[23:8]}};

assign tmp_62_fu_1574_p1 = grp_fu_1800_p3;

assign tmp_62_fu_1574_p4 = {{tmp_62_fu_1574_p1[23:8]}};

assign tmp_63_fu_1591_p1 = grp_fu_1809_p3;

assign tmp_63_fu_1591_p4 = {{tmp_63_fu_1591_p1[23:8]}};

assign tmp_fu_1630_p3 = add_ln77_fu_1624_p2[32'd16];

assign zext_ln67_fu_1324_p1 = select_ln67_1_reg_1886;

assign zext_ln69_1_fu_618_p1 = select_ln67_fu_604_p3;

assign zext_ln69_2_fu_1066_p1 = select_ln67_reg_1862;

assign zext_ln69_3_fu_730_p1 = select_ln67_reg_1862;

assign zext_ln69_fu_1062_p1 = p_shl10_fu_1055_p3;

assign zext_ln75_10_fu_829_p1 = add_ln75_14_fu_824_p2;

assign zext_ln75_11_fu_839_p1 = add_ln75_16_fu_834_p2;

assign zext_ln75_12_fu_874_p1 = add_ln75_17_fu_869_p2;

assign zext_ln75_13_fu_849_p1 = add_ln75_19_fu_844_p2;

assign zext_ln75_14_fu_884_p1 = add_ln75_20_fu_879_p2;

assign zext_ln75_15_fu_894_p1 = add_ln75_22_fu_889_p2;

assign zext_ln75_16_fu_943_p1 = add_ln75_23_fu_937_p2;

assign zext_ln75_17_fu_904_p1 = add_ln75_25_fu_899_p2;

assign zext_ln75_18_fu_954_p1 = add_ln75_26_fu_948_p2;

assign zext_ln75_19_fu_964_p1 = add_ln75_28_fu_959_p2;

assign zext_ln75_1_fu_629_p1 = add_ln75_1_fu_623_p2;

assign zext_ln75_20_fu_1009_p1 = add_ln75_29_fu_1004_p2;

assign zext_ln75_21_fu_974_p1 = add_ln75_31_fu_969_p2;

assign zext_ln75_22_fu_1019_p1 = add_ln75_32_fu_1014_p2;

assign zext_ln75_23_fu_1029_p1 = add_ln75_34_fu_1024_p2;

assign zext_ln75_24_fu_1099_p1 = add_ln75_35_fu_1094_p2;

assign zext_ln75_25_fu_1039_p1 = add_ln75_37_fu_1034_p2;

assign zext_ln75_26_fu_1109_p1 = add_ln75_38_fu_1104_p2;

assign zext_ln75_27_fu_1119_p1 = add_ln75_40_fu_1114_p2;

assign zext_ln75_28_fu_1180_p1 = add_ln75_41_fu_1175_p2;

assign zext_ln75_29_fu_1130_p1 = add_ln75_43_fu_1124_p2;

assign zext_ln75_2_fu_700_p1 = add_ln75_2_fu_694_p2;

assign zext_ln75_30_fu_1190_p1 = add_ln75_44_fu_1185_p2;

assign zext_ln75_31_fu_1200_p1 = add_ln75_46_fu_1195_p2;

assign zext_ln75_32_fu_1245_p1 = add_ln75_47_fu_1240_p2;

assign zext_ln75_33_fu_1210_p1 = add_ln75_49_fu_1205_p2;

assign zext_ln75_34_fu_1255_p1 = add_ln75_50_fu_1250_p2;

assign zext_ln75_35_fu_1265_p1 = add_ln75_52_fu_1260_p2;

assign zext_ln75_36_fu_1309_p1 = add_ln75_53_fu_1304_p2;

assign zext_ln75_37_fu_1275_p1 = add_ln75_55_fu_1270_p2;

assign zext_ln75_38_fu_1319_p1 = add_ln75_56_fu_1314_p2;

assign zext_ln75_3_fu_710_p1 = add_ln75_4_fu_705_p2;

assign zext_ln75_4_fu_770_p1 = add_ln75_5_fu_765_p2;

assign zext_ln75_5_fu_720_p1 = add_ln75_7_fu_715_p2;

assign zext_ln75_6_fu_780_p1 = add_ln75_8_fu_775_p2;

assign zext_ln75_7_fu_790_p1 = add_ln75_10_fu_785_p2;

assign zext_ln75_8_fu_819_p1 = add_ln75_11_fu_814_p2;

assign zext_ln75_9_fu_801_p1 = add_ln75_13_fu_795_p2;

assign zext_ln75_fu_689_p1 = add_ln75_fu_683_p2;

assign zext_ln77_1_fu_1638_p1 = add_ln77_1_reg_2194_pp0_iter1_reg;

assign zext_ln77_fu_1140_p1 = add_ln77_3_fu_1135_p2;

always @ (posedge ap_clk) begin
    empty_156_reg_1897[1:0] <= 2'b00;
    zext_ln69_3_reg_1928[8] <= 1'b0;
    p_cast86_reg_2042[1:0] <= 2'b00;
    p_cast86_reg_2042[8] <= 1'b0;
    zext_ln69_2_reg_2136[9:8] <= 2'b00;
end

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_67_1_loop_for_ap_2
