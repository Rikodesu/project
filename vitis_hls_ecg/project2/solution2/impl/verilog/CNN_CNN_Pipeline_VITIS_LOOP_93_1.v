// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_93_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        OutPool3_address0,
        OutPool3_ce0,
        OutPool3_q0,
        OutPool3_address1,
        OutPool3_ce1,
        OutPool3_q1,
        OutPool3_1_address0,
        OutPool3_1_ce0,
        OutPool3_1_q0,
        OutPool3_1_address1,
        OutPool3_1_ce1,
        OutPool3_1_q1,
        OutPool3_2_address0,
        OutPool3_2_ce0,
        OutPool3_2_q0,
        OutPool3_2_address1,
        OutPool3_2_ce1,
        OutPool3_2_q1,
        OutPool3_3_address0,
        OutPool3_3_ce0,
        OutPool3_3_q0,
        OutPool3_3_address1,
        OutPool3_3_ce1,
        OutPool3_3_q1,
        OutPool3_4_address0,
        OutPool3_4_ce0,
        OutPool3_4_q0,
        OutPool3_4_address1,
        OutPool3_4_ce1,
        OutPool3_4_q1,
        OutPool3_5_address0,
        OutPool3_5_ce0,
        OutPool3_5_q0,
        OutPool3_5_address1,
        OutPool3_5_ce1,
        OutPool3_5_q1,
        OutPool3_6_address0,
        OutPool3_6_ce0,
        OutPool3_6_q0,
        OutPool3_6_address1,
        OutPool3_6_ce1,
        OutPool3_6_q1,
        OutPool3_7_address0,
        OutPool3_7_ce0,
        OutPool3_7_q0,
        OutPool3_7_address1,
        OutPool3_7_ce1,
        OutPool3_7_q1,
        OutPool3_8_address0,
        OutPool3_8_ce0,
        OutPool3_8_q0,
        OutPool3_8_address1,
        OutPool3_8_ce1,
        OutPool3_8_q1,
        OutPool3_9_address0,
        OutPool3_9_ce0,
        OutPool3_9_q0,
        OutPool3_9_address1,
        OutPool3_9_ce1,
        OutPool3_9_q1,
        OutGlobalAverPool1D_address0,
        OutGlobalAverPool1D_ce0,
        OutGlobalAverPool1D_we0,
        OutGlobalAverPool1D_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] OutPool3_address0;
output   OutPool3_ce0;
input  [15:0] OutPool3_q0;
output  [5:0] OutPool3_address1;
output   OutPool3_ce1;
input  [15:0] OutPool3_q1;
output  [5:0] OutPool3_1_address0;
output   OutPool3_1_ce0;
input  [15:0] OutPool3_1_q0;
output  [5:0] OutPool3_1_address1;
output   OutPool3_1_ce1;
input  [15:0] OutPool3_1_q1;
output  [5:0] OutPool3_2_address0;
output   OutPool3_2_ce0;
input  [15:0] OutPool3_2_q0;
output  [5:0] OutPool3_2_address1;
output   OutPool3_2_ce1;
input  [15:0] OutPool3_2_q1;
output  [5:0] OutPool3_3_address0;
output   OutPool3_3_ce0;
input  [15:0] OutPool3_3_q0;
output  [5:0] OutPool3_3_address1;
output   OutPool3_3_ce1;
input  [15:0] OutPool3_3_q1;
output  [5:0] OutPool3_4_address0;
output   OutPool3_4_ce0;
input  [15:0] OutPool3_4_q0;
output  [5:0] OutPool3_4_address1;
output   OutPool3_4_ce1;
input  [15:0] OutPool3_4_q1;
output  [5:0] OutPool3_5_address0;
output   OutPool3_5_ce0;
input  [15:0] OutPool3_5_q0;
output  [5:0] OutPool3_5_address1;
output   OutPool3_5_ce1;
input  [15:0] OutPool3_5_q1;
output  [5:0] OutPool3_6_address0;
output   OutPool3_6_ce0;
input  [15:0] OutPool3_6_q0;
output  [5:0] OutPool3_6_address1;
output   OutPool3_6_ce1;
input  [15:0] OutPool3_6_q1;
output  [5:0] OutPool3_7_address0;
output   OutPool3_7_ce0;
input  [15:0] OutPool3_7_q0;
output  [5:0] OutPool3_7_address1;
output   OutPool3_7_ce1;
input  [15:0] OutPool3_7_q1;
output  [5:0] OutPool3_8_address0;
output   OutPool3_8_ce0;
input  [15:0] OutPool3_8_q0;
output  [5:0] OutPool3_8_address1;
output   OutPool3_8_ce1;
input  [15:0] OutPool3_8_q1;
output  [5:0] OutPool3_9_address0;
output   OutPool3_9_ce0;
input  [15:0] OutPool3_9_q0;
output  [5:0] OutPool3_9_address1;
output   OutPool3_9_ce1;
input  [15:0] OutPool3_9_q1;
output  [4:0] OutGlobalAverPool1D_address0;
output   OutGlobalAverPool1D_ce0;
output   OutGlobalAverPool1D_we0;
output  [11:0] OutGlobalAverPool1D_d0;

reg ap_idle;
reg OutPool3_ce0;
reg OutPool3_ce1;
reg OutPool3_1_ce0;
reg OutPool3_1_ce1;
reg OutPool3_2_ce0;
reg OutPool3_2_ce1;
reg OutPool3_3_ce0;
reg OutPool3_3_ce1;
reg OutPool3_4_ce0;
reg OutPool3_4_ce1;
reg OutPool3_5_ce0;
reg OutPool3_5_ce1;
reg OutPool3_6_ce0;
reg OutPool3_6_ce1;
reg OutPool3_7_ce0;
reg OutPool3_7_ce1;
reg OutPool3_8_ce0;
reg OutPool3_8_ce1;
reg OutPool3_9_ce0;
reg OutPool3_9_ce1;
reg OutGlobalAverPool1D_ce0;
reg OutGlobalAverPool1D_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln93_fu_341_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [5:0] i_reg_586;
wire    ap_block_pp0_stage0_11001;
reg   [5:0] i_reg_586_pp0_iter1_reg;
reg   [5:0] i_reg_586_pp0_iter2_reg;
wire   [15:0] add_ln96_3_fu_416_p2;
reg   [15:0] add_ln96_3_reg_695;
wire   [15:0] add_ln96_7_fu_440_p2;
reg   [15:0] add_ln96_7_reg_700;
wire   [15:0] add_ln96_17_fu_494_p2;
reg   [15:0] add_ln96_17_reg_705;
wire   [32:0] trunc_ln98_fu_519_p1;
reg   [32:0] trunc_ln98_reg_710;
reg   [0:0] tmp_reg_715;
reg   [11:0] tmp_187_cast_reg_721;
wire   [63:0] zext_ln96_fu_359_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln96_1_fu_379_p1;
wire   [63:0] zext_ln93_fu_541_p1;
reg   [5:0] hs_fu_66;
wire   [5:0] add_ln93_1_fu_347_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i;
wire   [5:0] shl_ln96_fu_353_p2;
wire   [5:0] or_ln96_fu_373_p2;
wire   [15:0] add_ln96_1_fu_404_p2;
wire   [15:0] add_ln96_2_fu_410_p2;
wire   [15:0] add_ln96_fu_398_p2;
wire   [15:0] add_ln96_5_fu_428_p2;
wire   [15:0] add_ln96_6_fu_434_p2;
wire   [15:0] add_ln96_4_fu_422_p2;
wire   [15:0] add_ln96_10_fu_452_p2;
wire   [15:0] add_ln96_11_fu_458_p2;
wire   [15:0] add_ln96_9_fu_446_p2;
wire   [15:0] add_ln96_14_fu_476_p2;
wire   [15:0] add_ln96_15_fu_482_p2;
wire   [15:0] add_ln96_13_fu_470_p2;
wire   [15:0] add_ln96_16_fu_488_p2;
wire   [15:0] add_ln96_12_fu_464_p2;
wire   [15:0] add_ln96_8_fu_500_p2;
wire  signed [15:0] avg_1_fu_504_p2;
wire   [17:0] mul_ln98_fu_513_p1;
wire   [33:0] mul_ln98_fu_513_p2;
wire   [32:0] sub_ln98_fu_545_p2;
wire   [11:0] tmp_186_cast_fu_550_p4;
wire   [11:0] select_ln98_fu_560_p3;
wire   [11:0] sub_ln98_1_fu_566_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 hs_fu_66 = 6'd0;
#0 ap_done_reg = 1'b0;
end

CNN_mul_16s_18ns_34_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 34 ))
mul_16s_18ns_34_1_1_U209(
    .din0(avg_1_fu_504_p2),
    .din1(mul_ln98_fu_513_p1),
    .dout(mul_ln98_fu_513_p2)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln93_fu_341_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            hs_fu_66 <= add_ln93_1_fu_347_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            hs_fu_66 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln96_17_reg_705 <= add_ln96_17_fu_494_p2;
        add_ln96_3_reg_695 <= add_ln96_3_fu_416_p2;
        add_ln96_7_reg_700 <= add_ln96_7_fu_440_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_reg_586 <= ap_sig_allocacmp_i;
        i_reg_586_pp0_iter1_reg <= i_reg_586;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_reg_586_pp0_iter2_reg <= i_reg_586_pp0_iter1_reg;
        tmp_187_cast_reg_721 <= {{mul_ln98_fu_513_p2[32:21]}};
        tmp_reg_715 <= avg_1_fu_504_p2[32'd15];
        trunc_ln98_reg_710 <= trunc_ln98_fu_519_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        OutGlobalAverPool1D_ce0 = 1'b1;
    end else begin
        OutGlobalAverPool1D_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        OutGlobalAverPool1D_we0 = 1'b1;
    end else begin
        OutGlobalAverPool1D_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_1_ce0 = 1'b1;
    end else begin
        OutPool3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_1_ce1 = 1'b1;
    end else begin
        OutPool3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_2_ce0 = 1'b1;
    end else begin
        OutPool3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_2_ce1 = 1'b1;
    end else begin
        OutPool3_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_3_ce0 = 1'b1;
    end else begin
        OutPool3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_3_ce1 = 1'b1;
    end else begin
        OutPool3_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_4_ce0 = 1'b1;
    end else begin
        OutPool3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_4_ce1 = 1'b1;
    end else begin
        OutPool3_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_5_ce0 = 1'b1;
    end else begin
        OutPool3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_5_ce1 = 1'b1;
    end else begin
        OutPool3_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_6_ce0 = 1'b1;
    end else begin
        OutPool3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_6_ce1 = 1'b1;
    end else begin
        OutPool3_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_7_ce0 = 1'b1;
    end else begin
        OutPool3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_7_ce1 = 1'b1;
    end else begin
        OutPool3_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_8_ce0 = 1'b1;
    end else begin
        OutPool3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_8_ce1 = 1'b1;
    end else begin
        OutPool3_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_9_ce0 = 1'b1;
    end else begin
        OutPool3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_9_ce1 = 1'b1;
    end else begin
        OutPool3_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_ce0 = 1'b1;
    end else begin
        OutPool3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutPool3_ce1 = 1'b1;
    end else begin
        OutPool3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln93_fu_341_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i = 6'd0;
    end else begin
        ap_sig_allocacmp_i = hs_fu_66;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutGlobalAverPool1D_address0 = zext_ln93_fu_541_p1;

assign OutGlobalAverPool1D_d0 = ((tmp_reg_715[0:0] == 1'b1) ? sub_ln98_1_fu_566_p2 : tmp_187_cast_reg_721);

assign OutPool3_1_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_1_address1 = zext_ln96_fu_359_p1;

assign OutPool3_2_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_2_address1 = zext_ln96_fu_359_p1;

assign OutPool3_3_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_3_address1 = zext_ln96_fu_359_p1;

assign OutPool3_4_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_4_address1 = zext_ln96_fu_359_p1;

assign OutPool3_5_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_5_address1 = zext_ln96_fu_359_p1;

assign OutPool3_6_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_6_address1 = zext_ln96_fu_359_p1;

assign OutPool3_7_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_7_address1 = zext_ln96_fu_359_p1;

assign OutPool3_8_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_8_address1 = zext_ln96_fu_359_p1;

assign OutPool3_9_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_9_address1 = zext_ln96_fu_359_p1;

assign OutPool3_address0 = zext_ln96_1_fu_379_p1;

assign OutPool3_address1 = zext_ln96_fu_359_p1;

assign add_ln93_1_fu_347_p2 = (ap_sig_allocacmp_i + 6'd1);

assign add_ln96_10_fu_452_p2 = (OutPool3_3_q0 + OutPool3_4_q0);

assign add_ln96_11_fu_458_p2 = (add_ln96_10_fu_452_p2 + OutPool3_2_q0);

assign add_ln96_12_fu_464_p2 = (add_ln96_11_fu_458_p2 + add_ln96_9_fu_446_p2);

assign add_ln96_13_fu_470_p2 = (OutPool3_5_q0 + OutPool3_6_q0);

assign add_ln96_14_fu_476_p2 = (OutPool3_8_q0 + OutPool3_9_q0);

assign add_ln96_15_fu_482_p2 = (add_ln96_14_fu_476_p2 + OutPool3_7_q0);

assign add_ln96_16_fu_488_p2 = (add_ln96_15_fu_482_p2 + add_ln96_13_fu_470_p2);

assign add_ln96_17_fu_494_p2 = (add_ln96_16_fu_488_p2 + add_ln96_12_fu_464_p2);

assign add_ln96_1_fu_404_p2 = (OutPool3_3_q1 + OutPool3_4_q1);

assign add_ln96_2_fu_410_p2 = (add_ln96_1_fu_404_p2 + OutPool3_2_q1);

assign add_ln96_3_fu_416_p2 = (add_ln96_2_fu_410_p2 + add_ln96_fu_398_p2);

assign add_ln96_4_fu_422_p2 = (OutPool3_5_q1 + OutPool3_6_q1);

assign add_ln96_5_fu_428_p2 = (OutPool3_8_q1 + OutPool3_9_q1);

assign add_ln96_6_fu_434_p2 = (add_ln96_5_fu_428_p2 + OutPool3_7_q1);

assign add_ln96_7_fu_440_p2 = (add_ln96_6_fu_434_p2 + add_ln96_4_fu_422_p2);

assign add_ln96_8_fu_500_p2 = (add_ln96_7_reg_700 + add_ln96_3_reg_695);

assign add_ln96_9_fu_446_p2 = (OutPool3_q0 + OutPool3_1_q0);

assign add_ln96_fu_398_p2 = (OutPool3_1_q1 + OutPool3_q1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign avg_1_fu_504_p2 = (add_ln96_17_reg_705 + add_ln96_8_fu_500_p2);

assign icmp_ln93_fu_341_p2 = ((ap_sig_allocacmp_i == 6'd32) ? 1'b1 : 1'b0);

assign mul_ln98_fu_513_p1 = 34'd104858;

assign or_ln96_fu_373_p2 = (shl_ln96_fu_353_p2 | 6'd1);

assign select_ln98_fu_560_p3 = ((tmp_reg_715[0:0] == 1'b1) ? tmp_186_cast_fu_550_p4 : tmp_187_cast_reg_721);

assign shl_ln96_fu_353_p2 = ap_sig_allocacmp_i << 6'd1;

assign sub_ln98_1_fu_566_p2 = (12'd0 - select_ln98_fu_560_p3);

assign sub_ln98_fu_545_p2 = (33'd0 - trunc_ln98_reg_710);

assign tmp_186_cast_fu_550_p4 = {{sub_ln98_fu_545_p2[32:21]}};

assign trunc_ln98_fu_519_p1 = mul_ln98_fu_513_p2[32:0];

assign zext_ln93_fu_541_p1 = i_reg_586_pp0_iter2_reg;

assign zext_ln96_1_fu_379_p1 = or_ln96_fu_373_p2;

assign zext_ln96_fu_359_p1 = shl_ln96_fu_353_p2;

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_93_1
