// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module CNN_CNN_Pipeline_VITIS_LOOP_41_1_loop_for_ap_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Weights_address0,
        Weights_ce0,
        Weights_q0,
        Weights_address1,
        Weights_ce1,
        Weights_q1,
        OutPadConv1_address0,
        OutPadConv1_ce0,
        OutPadConv1_q0,
        OutPadConv1_address1,
        OutPadConv1_ce1,
        OutPadConv1_q1,
        OutConv1_address0,
        OutConv1_ce0,
        OutConv1_we0,
        OutConv1_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 11'd1;
parameter    ap_ST_fsm_pp0_stage1 = 11'd2;
parameter    ap_ST_fsm_pp0_stage2 = 11'd4;
parameter    ap_ST_fsm_pp0_stage3 = 11'd8;
parameter    ap_ST_fsm_pp0_stage4 = 11'd16;
parameter    ap_ST_fsm_pp0_stage5 = 11'd32;
parameter    ap_ST_fsm_pp0_stage6 = 11'd64;
parameter    ap_ST_fsm_pp0_stage7 = 11'd128;
parameter    ap_ST_fsm_pp0_stage8 = 11'd256;
parameter    ap_ST_fsm_pp0_stage9 = 11'd512;
parameter    ap_ST_fsm_pp0_stage10 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] Weights_address0;
output   Weights_ce0;
input  [15:0] Weights_q0;
output  [13:0] Weights_address1;
output   Weights_ce1;
input  [15:0] Weights_q1;
output  [10:0] OutPadConv1_address0;
output   OutPadConv1_ce0;
input  [15:0] OutPadConv1_q0;
output  [10:0] OutPadConv1_address1;
output   OutPadConv1_ce1;
input  [15:0] OutPadConv1_q1;
output  [10:0] OutConv1_address0;
output   OutConv1_ce0;
output   OutConv1_we0;
output  [15:0] OutConv1_d0;

reg ap_idle;
reg[13:0] Weights_address0;
reg Weights_ce0;
reg[13:0] Weights_address1;
reg Weights_ce1;
reg[10:0] OutPadConv1_address0;
reg OutPadConv1_ce0;
reg[10:0] OutPadConv1_address1;
reg OutPadConv1_ce1;
reg OutConv1_ce0;
reg OutConv1_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10_subdone;
reg   [0:0] icmp_ln41_reg_1837;
reg    ap_condition_exit_pp0_iter0_stage10;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg  signed [15:0] reg_523;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6_11001;
reg  signed [15:0] reg_528;
reg  signed [15:0] reg_533;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8_11001;
reg  signed [15:0] reg_538;
reg  signed [15:0] reg_543;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7_11001;
reg  signed [15:0] reg_548;
reg  signed [15:0] reg_553;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9_11001;
reg  signed [15:0] reg_558;
wire   [0:0] icmp_ln41_fu_581_p2;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] select_ln41_fu_605_p3;
reg   [8:0] select_ln41_reg_1841;
reg   [8:0] select_ln41_reg_1841_pp0_iter1_reg;
wire   [2:0] select_ln41_1_fu_619_p3;
reg   [2:0] select_ln41_1_reg_1851;
wire   [1:0] empty_fu_627_p1;
reg   [1:0] empty_reg_1856;
reg   [1:0] empty_reg_1856_pp0_iter1_reg;
wire   [6:0] p_cast72_fu_641_p1;
reg   [6:0] p_cast72_reg_1862;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] tmp_17_reg_1914;
wire   [9:0] zext_ln43_3_fu_770_p1;
reg   [9:0] zext_ln43_3_reg_1939;
reg  signed [15:0] Weights_load_18_reg_2102;
reg  signed [15:0] OutPadConv1_load_11_reg_2107;
wire   [10:0] zext_ln43_2_fu_1072_p1;
reg   [10:0] zext_ln43_2_reg_2132;
reg  signed [15:0] Weights_load_20_reg_2155;
reg  signed [15:0] OutPadConv1_load_13_reg_2160;
reg  signed [15:0] Weights_load_22_reg_2200;
reg  signed [15:0] OutPadConv1_load_15_reg_2205;
reg  signed [15:0] Weights_load_24_reg_2245;
reg  signed [15:0] OutPadConv1_load_17_reg_2250;
wire    ap_block_pp0_stage10_11001;
reg  signed [15:0] Weights_load_25_reg_2295;
reg  signed [15:0] OutPadConv1_load_18_reg_2300;
reg  signed [15:0] Weights_load_26_reg_2305;
reg  signed [15:0] OutPadConv1_load_19_reg_2310;
reg  signed [15:0] Weights_load_6_reg_2315;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln49_fu_656_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln43_1_fu_645_p1;
wire   [63:0] zext_ln49_2_fu_678_p1;
wire   [63:0] zext_ln49_1_fu_667_p1;
wire   [63:0] zext_ln49_4_fu_745_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln49_3_fu_735_p1;
wire   [63:0] zext_ln49_6_fu_765_p1;
wire   [63:0] zext_ln49_5_fu_755_p1;
wire   [63:0] zext_ln49_8_fu_796_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln49_7_fu_786_p1;
wire   [63:0] zext_ln49_10_fu_817_p1;
wire   [63:0] zext_ln49_9_fu_807_p1;
wire   [63:0] zext_ln49_12_fu_852_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln49_11_fu_842_p1;
wire   [63:0] zext_ln49_14_fu_872_p1;
wire   [63:0] zext_ln49_13_fu_862_p1;
wire   [63:0] zext_ln49_16_fu_917_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln49_15_fu_907_p1;
wire   [63:0] zext_ln49_18_fu_937_p1;
wire   [63:0] zext_ln49_17_fu_927_p1;
wire   [63:0] zext_ln49_20_fu_982_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln49_19_fu_972_p1;
wire   [63:0] zext_ln49_22_fu_1002_p1;
wire   [63:0] zext_ln49_21_fu_992_p1;
wire   [63:0] zext_ln49_24_fu_1047_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln49_23_fu_1037_p1;
wire   [63:0] zext_ln49_26_fu_1067_p1;
wire   [63:0] zext_ln49_25_fu_1057_p1;
wire   [63:0] zext_ln49_28_fu_1115_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln49_27_fu_1105_p1;
wire   [63:0] zext_ln49_30_fu_1136_p1;
wire   [63:0] zext_ln49_29_fu_1126_p1;
wire   [63:0] zext_ln49_32_fu_1181_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln49_31_fu_1171_p1;
wire   [63:0] zext_ln49_34_fu_1201_p1;
wire   [63:0] zext_ln49_33_fu_1191_p1;
wire   [63:0] zext_ln49_36_fu_1246_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln49_35_fu_1236_p1;
wire   [63:0] zext_ln49_38_fu_1266_p1;
wire   [63:0] zext_ln49_37_fu_1256_p1;
wire   [63:0] arrayidx9_sum_cast_cast_cast_cast_fu_1282_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln51_1_fu_1626_p1;
reg   [8:0] y_fu_152;
wire   [8:0] add_ln49_1_fu_661_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_y_load;
reg   [2:0] n_fu_156;
reg   [2:0] ap_sig_allocacmp_n_load;
reg   [10:0] indvar_flatten13_fu_160;
wire   [10:0] add_ln41_fu_587_p2;
reg   [10:0] ap_sig_allocacmp_indvar_flatten13_load;
wire   [0:0] icmp_ln43_fu_599_p2;
wire   [2:0] add_ln41_2_fu_613_p2;
wire   [5:0] tmp_1_fu_631_p4;
wire   [6:0] add_ln49_fu_650_p2;
wire   [6:0] add_ln49_2_fu_672_p2;
wire   [23:0] mul_ln49_fu_706_p2;
wire   [8:0] add_ln49_4_fu_730_p2;
wire   [6:0] add_ln49_5_fu_740_p2;
wire   [8:0] add_ln49_7_fu_750_p2;
wire   [6:0] add_ln49_8_fu_760_p2;
wire   [8:0] add_ln49_10_fu_781_p2;
wire   [6:0] add_ln49_11_fu_791_p2;
wire   [9:0] add_ln49_13_fu_801_p2;
wire   [6:0] add_ln49_14_fu_812_p2;
wire   [9:0] add_ln49_16_fu_837_p2;
wire   [6:0] add_ln49_17_fu_847_p2;
wire   [9:0] add_ln49_19_fu_857_p2;
wire   [6:0] add_ln49_20_fu_867_p2;
wire  signed [23:0] tmp_18_fu_877_p1;
wire   [23:0] grp_fu_1645_p3;
wire   [15:0] tmp_18_fu_877_p4;
wire   [9:0] add_ln49_22_fu_902_p2;
wire   [6:0] add_ln49_23_fu_912_p2;
wire   [9:0] add_ln49_25_fu_922_p2;
wire   [6:0] add_ln49_26_fu_932_p2;
wire  signed [23:0] tmp_19_fu_942_p1;
wire   [23:0] grp_fu_1654_p3;
wire   [15:0] tmp_19_fu_942_p4;
wire   [9:0] add_ln49_28_fu_967_p2;
wire   [6:0] add_ln49_29_fu_977_p2;
wire   [9:0] add_ln49_31_fu_987_p2;
wire   [6:0] add_ln49_32_fu_997_p2;
wire  signed [23:0] tmp_20_fu_1007_p1;
wire   [23:0] grp_fu_1663_p3;
wire   [15:0] tmp_20_fu_1007_p4;
wire   [9:0] add_ln49_34_fu_1032_p2;
wire   [6:0] add_ln49_35_fu_1042_p2;
wire   [9:0] add_ln49_37_fu_1052_p2;
wire   [6:0] add_ln49_38_fu_1062_p2;
wire  signed [23:0] tmp_21_fu_1075_p1;
wire   [23:0] grp_fu_1672_p3;
wire   [15:0] tmp_21_fu_1075_p4;
wire   [9:0] add_ln49_40_fu_1100_p2;
wire   [6:0] add_ln49_41_fu_1110_p2;
wire   [10:0] add_ln49_43_fu_1120_p2;
wire   [6:0] add_ln49_44_fu_1131_p2;
wire  signed [23:0] tmp_22_fu_1141_p1;
wire   [23:0] grp_fu_1681_p3;
wire   [15:0] tmp_22_fu_1141_p4;
wire   [10:0] add_ln49_46_fu_1166_p2;
wire   [6:0] add_ln49_47_fu_1176_p2;
wire   [10:0] add_ln49_49_fu_1186_p2;
wire   [6:0] add_ln49_50_fu_1196_p2;
wire  signed [23:0] tmp_23_fu_1206_p1;
wire   [23:0] grp_fu_1690_p3;
wire   [15:0] tmp_23_fu_1206_p4;
wire   [10:0] add_ln49_52_fu_1231_p2;
wire   [6:0] add_ln49_53_fu_1241_p2;
wire   [10:0] add_ln49_55_fu_1251_p2;
wire   [6:0] add_ln49_56_fu_1261_p2;
wire   [5:0] arrayidx9_sum_fu_1271_p3;
wire  signed [6:0] arrayidx9_sum_cast_cast_cast_fu_1278_p1;
wire  signed [23:0] tmp_24_fu_1287_p1;
wire   [23:0] grp_fu_1699_p3;
wire   [15:0] tmp_24_fu_1287_p4;
wire  signed [23:0] tmp_25_fu_1312_p1;
wire   [23:0] grp_fu_1708_p3;
wire   [15:0] tmp_25_fu_1312_p4;
wire  signed [23:0] tmp_26_fu_1335_p1;
wire   [23:0] grp_fu_1717_p3;
wire   [15:0] tmp_26_fu_1335_p4;
wire  signed [23:0] tmp_27_fu_1360_p1;
wire   [23:0] grp_fu_1726_p3;
wire   [15:0] tmp_27_fu_1360_p4;
wire  signed [23:0] tmp_28_fu_1383_p1;
wire   [23:0] grp_fu_1735_p3;
wire   [15:0] tmp_28_fu_1383_p4;
wire  signed [23:0] tmp_29_fu_1408_p1;
wire   [23:0] grp_fu_1744_p3;
wire   [15:0] tmp_29_fu_1408_p4;
wire  signed [23:0] tmp_30_fu_1431_p1;
wire   [23:0] grp_fu_1753_p3;
wire   [15:0] tmp_30_fu_1431_p4;
wire  signed [23:0] tmp_31_fu_1456_p1;
wire   [23:0] grp_fu_1762_p3;
wire   [15:0] tmp_31_fu_1456_p4;
wire  signed [23:0] tmp_32_fu_1479_p1;
wire   [23:0] grp_fu_1771_p3;
wire   [15:0] tmp_32_fu_1479_p4;
wire  signed [23:0] tmp_33_fu_1502_p1;
wire   [23:0] grp_fu_1780_p3;
wire   [15:0] tmp_33_fu_1502_p4;
wire  signed [23:0] tmp_34_fu_1525_p1;
wire   [23:0] grp_fu_1789_p3;
wire   [15:0] tmp_34_fu_1525_p4;
wire  signed [23:0] tmp_35_fu_1542_p1;
wire   [23:0] grp_fu_1798_p3;
wire   [15:0] tmp_35_fu_1542_p4;
wire   [9:0] p_shl5_fu_1562_p3;
wire   [7:0] p_shl6_fu_1573_p3;
wire  signed [23:0] s_fu_1584_p1;
wire   [23:0] grp_fu_1807_p3;
wire  signed [15:0] s_fu_1584_p4;
wire  signed [16:0] sext_ln51_fu_1593_p1;
wire  signed [16:0] conv_i_i13_i93_i20_fu_1559_p1;
wire   [16:0] add_ln51_fu_1597_p2;
wire   [8:0] zext_ln43_fu_1580_p1;
wire   [8:0] add_ln51_3_fu_1611_p2;
wire   [10:0] zext_ln51_fu_1616_p1;
wire   [10:0] p_shl5_cast_fu_1569_p1;
wire   [10:0] add_ln51_1_fu_1620_p2;
wire   [0:0] tmp_fu_1603_p3;
wire   [15:0] add_ln51_2_fu_1631_p2;
wire   [23:0] grp_fu_1645_p2;
wire   [23:0] grp_fu_1654_p2;
wire   [23:0] grp_fu_1663_p2;
wire   [23:0] grp_fu_1672_p2;
wire   [23:0] grp_fu_1681_p2;
wire   [23:0] grp_fu_1690_p2;
wire   [23:0] grp_fu_1699_p2;
wire   [23:0] grp_fu_1708_p2;
wire   [23:0] grp_fu_1717_p2;
wire   [23:0] grp_fu_1726_p2;
wire   [23:0] grp_fu_1735_p2;
wire   [23:0] grp_fu_1744_p2;
wire   [23:0] grp_fu_1753_p2;
wire   [23:0] grp_fu_1762_p2;
wire   [23:0] grp_fu_1771_p2;
wire   [23:0] grp_fu_1780_p2;
wire   [23:0] grp_fu_1789_p2;
wire   [23:0] grp_fu_1798_p2;
wire   [23:0] grp_fu_1807_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 y_fu_152 = 9'd0;
#0 n_fu_156 = 3'd0;
#0 indvar_flatten13_fu_160 = 11'd0;
#0 ap_done_reg = 1'b0;
end

CNN_mul_16s_16s_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 24 ))
mul_16s_16s_24_1_1_U17(
    .din0(OutPadConv1_q1),
    .din1(Weights_q1),
    .dout(mul_ln49_fu_706_p2)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_q0),
    .din1(Weights_q0),
    .din2(grp_fu_1645_p2),
    .ce(1'b1),
    .dout(grp_fu_1645_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_q1),
    .din1(Weights_q1),
    .din2(grp_fu_1654_p2),
    .ce(1'b1),
    .dout(grp_fu_1654_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_528),
    .din1(reg_523),
    .din2(grp_fu_1663_p2),
    .ce(1'b1),
    .dout(grp_fu_1663_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_528),
    .din1(reg_523),
    .din2(grp_fu_1672_p2),
    .ce(1'b1),
    .dout(grp_fu_1672_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_538),
    .din1(reg_533),
    .din2(grp_fu_1681_p2),
    .ce(1'b1),
    .dout(grp_fu_1681_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_528),
    .din1(reg_523),
    .din2(grp_fu_1690_p2),
    .ce(1'b1),
    .dout(grp_fu_1690_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_548),
    .din1(reg_543),
    .din2(grp_fu_1699_p2),
    .ce(1'b1),
    .dout(grp_fu_1699_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_538),
    .din1(reg_533),
    .din2(grp_fu_1708_p2),
    .ce(1'b1),
    .dout(grp_fu_1708_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_558),
    .din1(reg_553),
    .din2(grp_fu_1717_p2),
    .ce(1'b1),
    .dout(grp_fu_1717_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_528),
    .din1(reg_523),
    .din2(grp_fu_1726_p2),
    .ce(1'b1),
    .dout(grp_fu_1726_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_load_11_reg_2107),
    .din1(Weights_load_18_reg_2102),
    .din2(grp_fu_1735_p2),
    .ce(1'b1),
    .dout(grp_fu_1735_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_548),
    .din1(reg_543),
    .din2(grp_fu_1744_p2),
    .ce(1'b1),
    .dout(grp_fu_1744_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_load_13_reg_2160),
    .din1(Weights_load_20_reg_2155),
    .din2(grp_fu_1753_p2),
    .ce(1'b1),
    .dout(grp_fu_1753_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_538),
    .din1(reg_533),
    .din2(grp_fu_1762_p2),
    .ce(1'b1),
    .dout(grp_fu_1762_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_load_15_reg_2205),
    .din1(Weights_load_22_reg_2200),
    .din2(grp_fu_1771_p2),
    .ce(1'b1),
    .dout(grp_fu_1771_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_558),
    .din1(reg_553),
    .din2(grp_fu_1780_p2),
    .ce(1'b1),
    .dout(grp_fu_1780_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_load_17_reg_2250),
    .din1(Weights_load_24_reg_2245),
    .din2(grp_fu_1789_p2),
    .ce(1'b1),
    .dout(grp_fu_1789_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_load_18_reg_2300),
    .din1(Weights_load_25_reg_2295),
    .din2(grp_fu_1798_p2),
    .ce(1'b1),
    .dout(grp_fu_1798_p3)
);

CNN_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(OutPadConv1_load_19_reg_2310),
    .din1(Weights_load_26_reg_2305),
    .din2(grp_fu_1807_p2),
    .ce(1'b1),
    .dout(grp_fu_1807_p3)
);

CNN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage10),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln41_fu_581_p2 == 1'd0))) begin
            indvar_flatten13_fu_160 <= add_ln41_fu_587_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_160 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln41_fu_581_p2 == 1'd0))) begin
            n_fu_156 <= select_ln41_1_fu_619_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            n_fu_156 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_523 <= Weights_q1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_523 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_528 <= OutPadConv1_q1;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        reg_528 <= OutPadConv1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_533 <= Weights_q1;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_533 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_538 <= OutPadConv1_q1;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        reg_538 <= OutPadConv1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_543 <= Weights_q1;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            reg_543 <= Weights_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            reg_548 <= OutPadConv1_q1;
        end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            reg_548 <= OutPadConv1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            reg_553 <= Weights_q1;
        end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            reg_553 <= Weights_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            reg_558 <= OutPadConv1_q1;
        end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            reg_558 <= OutPadConv1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln41_fu_581_p2 == 1'd0))) begin
            y_fu_152 <= add_ln49_1_fu_661_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_152 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        OutPadConv1_load_11_reg_2107 <= OutPadConv1_q0;
        Weights_load_18_reg_2102 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        OutPadConv1_load_13_reg_2160 <= OutPadConv1_q0;
        Weights_load_20_reg_2155 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        OutPadConv1_load_15_reg_2205 <= OutPadConv1_q0;
        Weights_load_22_reg_2200 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        OutPadConv1_load_17_reg_2250 <= OutPadConv1_q0;
        Weights_load_24_reg_2245 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        OutPadConv1_load_18_reg_2300 <= OutPadConv1_q1;
        OutPadConv1_load_19_reg_2310 <= OutPadConv1_q0;
        Weights_load_25_reg_2295 <= Weights_q1;
        Weights_load_26_reg_2305 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Weights_load_6_reg_2315 <= Weights_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_1856 <= empty_fu_627_p1;
        empty_reg_1856_pp0_iter1_reg <= empty_reg_1856;
        icmp_ln41_reg_1837 <= icmp_ln41_fu_581_p2;
        p_cast72_reg_1862[5 : 2] <= p_cast72_fu_641_p1[5 : 2];
        select_ln41_1_reg_1851 <= select_ln41_1_fu_619_p3;
        select_ln41_reg_1841 <= select_ln41_fu_605_p3;
        select_ln41_reg_1841_pp0_iter1_reg <= select_ln41_reg_1841;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_17_reg_1914 <= {{mul_ln49_fu_706_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        zext_ln43_2_reg_2132[8 : 0] <= zext_ln43_2_fu_1072_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        zext_ln43_3_reg_1939[8 : 0] <= zext_ln43_3_fu_770_p1[8 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutConv1_ce0 = 1'b1;
    end else begin
        OutConv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OutConv1_we0 = 1'b1;
    end else begin
        OutConv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            OutPadConv1_address0 = zext_ln49_37_fu_1256_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            OutPadConv1_address0 = zext_ln49_33_fu_1191_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            OutPadConv1_address0 = zext_ln49_29_fu_1126_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            OutPadConv1_address0 = zext_ln49_25_fu_1057_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            OutPadConv1_address0 = zext_ln49_21_fu_992_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            OutPadConv1_address0 = zext_ln49_17_fu_927_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            OutPadConv1_address0 = zext_ln49_13_fu_862_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            OutPadConv1_address0 = zext_ln49_9_fu_807_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            OutPadConv1_address0 = zext_ln49_5_fu_755_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            OutPadConv1_address0 = zext_ln49_1_fu_667_p1;
        end else begin
            OutPadConv1_address0 = 'bx;
        end
    end else begin
        OutPadConv1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            OutPadConv1_address1 = zext_ln49_35_fu_1236_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            OutPadConv1_address1 = zext_ln49_31_fu_1171_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            OutPadConv1_address1 = zext_ln49_27_fu_1105_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            OutPadConv1_address1 = zext_ln49_23_fu_1037_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            OutPadConv1_address1 = zext_ln49_19_fu_972_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            OutPadConv1_address1 = zext_ln49_15_fu_907_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            OutPadConv1_address1 = zext_ln49_11_fu_842_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            OutPadConv1_address1 = zext_ln49_7_fu_786_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            OutPadConv1_address1 = zext_ln49_3_fu_735_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            OutPadConv1_address1 = zext_ln43_1_fu_645_p1;
        end else begin
            OutPadConv1_address1 = 'bx;
        end
    end else begin
        OutPadConv1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        OutPadConv1_ce0 = 1'b1;
    end else begin
        OutPadConv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        OutPadConv1_ce1 = 1'b1;
    end else begin
        OutPadConv1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            Weights_address0 = arrayidx9_sum_cast_cast_cast_cast_fu_1282_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Weights_address0 = zext_ln49_38_fu_1266_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Weights_address0 = zext_ln49_34_fu_1201_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Weights_address0 = zext_ln49_30_fu_1136_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Weights_address0 = zext_ln49_26_fu_1067_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Weights_address0 = zext_ln49_22_fu_1002_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Weights_address0 = zext_ln49_18_fu_937_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Weights_address0 = zext_ln49_14_fu_872_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Weights_address0 = zext_ln49_10_fu_817_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Weights_address0 = zext_ln49_6_fu_765_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Weights_address0 = zext_ln49_2_fu_678_p1;
        end else begin
            Weights_address0 = 'bx;
        end
    end else begin
        Weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            Weights_address1 = zext_ln49_36_fu_1246_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            Weights_address1 = zext_ln49_32_fu_1181_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            Weights_address1 = zext_ln49_28_fu_1115_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            Weights_address1 = zext_ln49_24_fu_1047_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            Weights_address1 = zext_ln49_20_fu_982_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            Weights_address1 = zext_ln49_16_fu_917_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            Weights_address1 = zext_ln49_12_fu_852_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            Weights_address1 = zext_ln49_8_fu_796_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            Weights_address1 = zext_ln49_4_fu_745_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Weights_address1 = zext_ln49_fu_656_p1;
        end else begin
            Weights_address1 = 'bx;
        end
    end else begin
        Weights_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        Weights_ce0 = 1'b1;
    end else begin
        Weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 
    == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        Weights_ce1 = 1'b1;
    end else begin
        Weights_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_1837 == 1'd1) & (1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln41_reg_1837 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten13_load = 11'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten13_load = indvar_flatten13_fu_160;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_n_load = 3'd0;
    end else begin
        ap_sig_allocacmp_n_load = n_fu_156;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_load = 9'd0;
    end else begin
        ap_sig_allocacmp_y_load = y_fu_152;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage0) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OutConv1_address0 = zext_ln51_1_fu_1626_p1;

assign OutConv1_d0 = ((tmp_fu_1603_p3[0:0] == 1'b1) ? 16'd0 : add_ln51_2_fu_1631_p2);

assign add_ln41_2_fu_613_p2 = (ap_sig_allocacmp_n_load + 3'd1);

assign add_ln41_fu_587_p2 = (ap_sig_allocacmp_indvar_flatten13_load + 11'd1);

assign add_ln49_10_fu_781_p2 = (select_ln41_reg_1841 + 9'd4);

assign add_ln49_11_fu_791_p2 = (p_cast72_reg_1862 + 7'd28);

assign add_ln49_13_fu_801_p2 = (zext_ln43_3_fu_770_p1 + 10'd324);

assign add_ln49_14_fu_812_p2 = (p_cast72_reg_1862 + 7'd29);

assign add_ln49_16_fu_837_p2 = (zext_ln43_3_reg_1939 + 10'd325);

assign add_ln49_17_fu_847_p2 = (p_cast72_reg_1862 + 7'd30);

assign add_ln49_19_fu_857_p2 = (zext_ln43_3_reg_1939 + 10'd326);

assign add_ln49_1_fu_661_p2 = (select_ln41_fu_605_p3 + 9'd1);

assign add_ln49_20_fu_867_p2 = (p_cast72_reg_1862 + 7'd31);

assign add_ln49_22_fu_902_p2 = (zext_ln43_3_reg_1939 + 10'd327);

assign add_ln49_23_fu_912_p2 = (p_cast72_reg_1862 + 7'd32);

assign add_ln49_25_fu_922_p2 = (zext_ln43_3_reg_1939 + 10'd328);

assign add_ln49_26_fu_932_p2 = (p_cast72_reg_1862 + 7'd33);

assign add_ln49_28_fu_967_p2 = ($signed(zext_ln43_3_reg_1939) + $signed(10'd648));

assign add_ln49_29_fu_977_p2 = (p_cast72_reg_1862 + 7'd34);

assign add_ln49_2_fu_672_p2 = (p_cast72_fu_641_p1 + 7'd25);

assign add_ln49_31_fu_987_p2 = ($signed(zext_ln43_3_reg_1939) + $signed(10'd649));

assign add_ln49_32_fu_997_p2 = (p_cast72_reg_1862 + 7'd35);

assign add_ln49_34_fu_1032_p2 = ($signed(zext_ln43_3_reg_1939) + $signed(10'd650));

assign add_ln49_35_fu_1042_p2 = (p_cast72_reg_1862 + 7'd36);

assign add_ln49_37_fu_1052_p2 = ($signed(zext_ln43_3_reg_1939) + $signed(10'd651));

assign add_ln49_38_fu_1062_p2 = (p_cast72_reg_1862 + 7'd37);

assign add_ln49_40_fu_1100_p2 = ($signed(zext_ln43_3_reg_1939) + $signed(10'd652));

assign add_ln49_41_fu_1110_p2 = (p_cast72_reg_1862 + 7'd38);

assign add_ln49_43_fu_1120_p2 = (zext_ln43_2_fu_1072_p1 + 11'd972);

assign add_ln49_44_fu_1131_p2 = (p_cast72_reg_1862 + 7'd39);

assign add_ln49_46_fu_1166_p2 = (zext_ln43_2_reg_2132 + 11'd973);

assign add_ln49_47_fu_1176_p2 = (p_cast72_reg_1862 + 7'd40);

assign add_ln49_49_fu_1186_p2 = (zext_ln43_2_reg_2132 + 11'd974);

assign add_ln49_4_fu_730_p2 = (select_ln41_reg_1841 + 9'd2);

assign add_ln49_50_fu_1196_p2 = (p_cast72_reg_1862 + 7'd41);

assign add_ln49_52_fu_1231_p2 = (zext_ln43_2_reg_2132 + 11'd975);

assign add_ln49_53_fu_1241_p2 = (p_cast72_reg_1862 + 7'd42);

assign add_ln49_55_fu_1251_p2 = (zext_ln43_2_reg_2132 + 11'd976);

assign add_ln49_56_fu_1261_p2 = (p_cast72_reg_1862 + 7'd43);

assign add_ln49_5_fu_740_p2 = (p_cast72_reg_1862 + 7'd26);

assign add_ln49_7_fu_750_p2 = (select_ln41_reg_1841 + 9'd3);

assign add_ln49_8_fu_760_p2 = (p_cast72_reg_1862 + 7'd27);

assign add_ln49_fu_650_p2 = (p_cast72_fu_641_p1 + 7'd24);

assign add_ln51_1_fu_1620_p2 = (zext_ln51_fu_1616_p1 + p_shl5_cast_fu_1569_p1);

assign add_ln51_2_fu_1631_p2 = ($signed(Weights_load_6_reg_2315) + $signed(s_fu_1584_p4));

assign add_ln51_3_fu_1611_p2 = (zext_ln43_fu_1580_p1 + select_ln41_reg_1841_pp0_iter1_reg);

assign add_ln51_fu_1597_p2 = ($signed(sext_ln51_fu_1593_p1) + $signed(conv_i_i13_i93_i20_fu_1559_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage10;

assign arrayidx9_sum_cast_cast_cast_cast_fu_1282_p1 = $unsigned(arrayidx9_sum_cast_cast_cast_fu_1278_p1);

assign arrayidx9_sum_cast_cast_cast_fu_1278_p1 = $signed(arrayidx9_sum_fu_1271_p3);

assign arrayidx9_sum_fu_1271_p3 = {{3'd5}, {select_ln41_1_reg_1851}};

assign conv_i_i13_i93_i20_fu_1559_p1 = Weights_load_6_reg_2315;

assign empty_fu_627_p1 = select_ln41_1_fu_619_p3[1:0];

assign grp_fu_1645_p2 = {{tmp_17_reg_1914}, {8'd0}};

assign grp_fu_1654_p2 = {{tmp_18_fu_877_p4}, {8'd0}};

assign grp_fu_1663_p2 = {{tmp_19_fu_942_p4}, {8'd0}};

assign grp_fu_1672_p2 = {{tmp_20_fu_1007_p4}, {8'd0}};

assign grp_fu_1681_p2 = {{tmp_21_fu_1075_p4}, {8'd0}};

assign grp_fu_1690_p2 = {{tmp_22_fu_1141_p4}, {8'd0}};

assign grp_fu_1699_p2 = {{tmp_23_fu_1206_p4}, {8'd0}};

assign grp_fu_1708_p2 = {{tmp_24_fu_1287_p4}, {8'd0}};

assign grp_fu_1717_p2 = {{tmp_25_fu_1312_p4}, {8'd0}};

assign grp_fu_1726_p2 = {{tmp_26_fu_1335_p4}, {8'd0}};

assign grp_fu_1735_p2 = {{tmp_27_fu_1360_p4}, {8'd0}};

assign grp_fu_1744_p2 = {{tmp_28_fu_1383_p4}, {8'd0}};

assign grp_fu_1753_p2 = {{tmp_29_fu_1408_p4}, {8'd0}};

assign grp_fu_1762_p2 = {{tmp_30_fu_1431_p4}, {8'd0}};

assign grp_fu_1771_p2 = {{tmp_31_fu_1456_p4}, {8'd0}};

assign grp_fu_1780_p2 = {{tmp_32_fu_1479_p4}, {8'd0}};

assign grp_fu_1789_p2 = {{tmp_33_fu_1502_p4}, {8'd0}};

assign grp_fu_1798_p2 = {{tmp_34_fu_1525_p4}, {8'd0}};

assign grp_fu_1807_p2 = {{tmp_35_fu_1542_p4}, {8'd0}};

assign icmp_ln41_fu_581_p2 = ((ap_sig_allocacmp_indvar_flatten13_load == 11'd1280) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_599_p2 = ((ap_sig_allocacmp_y_load == 9'd320) ? 1'b1 : 1'b0);

assign p_cast72_fu_641_p1 = tmp_1_fu_631_p4;

assign p_shl5_cast_fu_1569_p1 = p_shl5_fu_1562_p3;

assign p_shl5_fu_1562_p3 = {{empty_reg_1856_pp0_iter1_reg}, {8'd0}};

assign p_shl6_fu_1573_p3 = {{empty_reg_1856_pp0_iter1_reg}, {6'd0}};

assign s_fu_1584_p1 = grp_fu_1807_p3;

assign s_fu_1584_p4 = {{s_fu_1584_p1[23:8]}};

assign select_ln41_1_fu_619_p3 = ((icmp_ln43_fu_599_p2[0:0] == 1'b1) ? add_ln41_2_fu_613_p2 : ap_sig_allocacmp_n_load);

assign select_ln41_fu_605_p3 = ((icmp_ln43_fu_599_p2[0:0] == 1'b1) ? 9'd0 : ap_sig_allocacmp_y_load);

assign sext_ln51_fu_1593_p1 = s_fu_1584_p4;

assign tmp_18_fu_877_p1 = grp_fu_1645_p3;

assign tmp_18_fu_877_p4 = {{tmp_18_fu_877_p1[23:8]}};

assign tmp_19_fu_942_p1 = grp_fu_1654_p3;

assign tmp_19_fu_942_p4 = {{tmp_19_fu_942_p1[23:8]}};

assign tmp_1_fu_631_p4 = {{{empty_fu_627_p1}, {empty_fu_627_p1}}, {2'd0}};

assign tmp_20_fu_1007_p1 = grp_fu_1663_p3;

assign tmp_20_fu_1007_p4 = {{tmp_20_fu_1007_p1[23:8]}};

assign tmp_21_fu_1075_p1 = grp_fu_1672_p3;

assign tmp_21_fu_1075_p4 = {{tmp_21_fu_1075_p1[23:8]}};

assign tmp_22_fu_1141_p1 = grp_fu_1681_p3;

assign tmp_22_fu_1141_p4 = {{tmp_22_fu_1141_p1[23:8]}};

assign tmp_23_fu_1206_p1 = grp_fu_1690_p3;

assign tmp_23_fu_1206_p4 = {{tmp_23_fu_1206_p1[23:8]}};

assign tmp_24_fu_1287_p1 = grp_fu_1699_p3;

assign tmp_24_fu_1287_p4 = {{tmp_24_fu_1287_p1[23:8]}};

assign tmp_25_fu_1312_p1 = grp_fu_1708_p3;

assign tmp_25_fu_1312_p4 = {{tmp_25_fu_1312_p1[23:8]}};

assign tmp_26_fu_1335_p1 = grp_fu_1717_p3;

assign tmp_26_fu_1335_p4 = {{tmp_26_fu_1335_p1[23:8]}};

assign tmp_27_fu_1360_p1 = grp_fu_1726_p3;

assign tmp_27_fu_1360_p4 = {{tmp_27_fu_1360_p1[23:8]}};

assign tmp_28_fu_1383_p1 = grp_fu_1735_p3;

assign tmp_28_fu_1383_p4 = {{tmp_28_fu_1383_p1[23:8]}};

assign tmp_29_fu_1408_p1 = grp_fu_1744_p3;

assign tmp_29_fu_1408_p4 = {{tmp_29_fu_1408_p1[23:8]}};

assign tmp_30_fu_1431_p1 = grp_fu_1753_p3;

assign tmp_30_fu_1431_p4 = {{tmp_30_fu_1431_p1[23:8]}};

assign tmp_31_fu_1456_p1 = grp_fu_1762_p3;

assign tmp_31_fu_1456_p4 = {{tmp_31_fu_1456_p1[23:8]}};

assign tmp_32_fu_1479_p1 = grp_fu_1771_p3;

assign tmp_32_fu_1479_p4 = {{tmp_32_fu_1479_p1[23:8]}};

assign tmp_33_fu_1502_p1 = grp_fu_1780_p3;

assign tmp_33_fu_1502_p4 = {{tmp_33_fu_1502_p1[23:8]}};

assign tmp_34_fu_1525_p1 = grp_fu_1789_p3;

assign tmp_34_fu_1525_p4 = {{tmp_34_fu_1525_p1[23:8]}};

assign tmp_35_fu_1542_p1 = grp_fu_1798_p3;

assign tmp_35_fu_1542_p4 = {{tmp_35_fu_1542_p1[23:8]}};

assign tmp_fu_1603_p3 = add_ln51_fu_1597_p2[32'd16];

assign zext_ln43_1_fu_645_p1 = select_ln41_fu_605_p3;

assign zext_ln43_2_fu_1072_p1 = select_ln41_reg_1841;

assign zext_ln43_3_fu_770_p1 = select_ln41_reg_1841;

assign zext_ln43_fu_1580_p1 = p_shl6_fu_1573_p3;

assign zext_ln49_10_fu_817_p1 = add_ln49_14_fu_812_p2;

assign zext_ln49_11_fu_842_p1 = add_ln49_16_fu_837_p2;

assign zext_ln49_12_fu_852_p1 = add_ln49_17_fu_847_p2;

assign zext_ln49_13_fu_862_p1 = add_ln49_19_fu_857_p2;

assign zext_ln49_14_fu_872_p1 = add_ln49_20_fu_867_p2;

assign zext_ln49_15_fu_907_p1 = add_ln49_22_fu_902_p2;

assign zext_ln49_16_fu_917_p1 = add_ln49_23_fu_912_p2;

assign zext_ln49_17_fu_927_p1 = add_ln49_25_fu_922_p2;

assign zext_ln49_18_fu_937_p1 = add_ln49_26_fu_932_p2;

assign zext_ln49_19_fu_972_p1 = add_ln49_28_fu_967_p2;

assign zext_ln49_1_fu_667_p1 = add_ln49_1_fu_661_p2;

assign zext_ln49_20_fu_982_p1 = add_ln49_29_fu_977_p2;

assign zext_ln49_21_fu_992_p1 = add_ln49_31_fu_987_p2;

assign zext_ln49_22_fu_1002_p1 = add_ln49_32_fu_997_p2;

assign zext_ln49_23_fu_1037_p1 = add_ln49_34_fu_1032_p2;

assign zext_ln49_24_fu_1047_p1 = add_ln49_35_fu_1042_p2;

assign zext_ln49_25_fu_1057_p1 = add_ln49_37_fu_1052_p2;

assign zext_ln49_26_fu_1067_p1 = add_ln49_38_fu_1062_p2;

assign zext_ln49_27_fu_1105_p1 = add_ln49_40_fu_1100_p2;

assign zext_ln49_28_fu_1115_p1 = add_ln49_41_fu_1110_p2;

assign zext_ln49_29_fu_1126_p1 = add_ln49_43_fu_1120_p2;

assign zext_ln49_2_fu_678_p1 = add_ln49_2_fu_672_p2;

assign zext_ln49_30_fu_1136_p1 = add_ln49_44_fu_1131_p2;

assign zext_ln49_31_fu_1171_p1 = add_ln49_46_fu_1166_p2;

assign zext_ln49_32_fu_1181_p1 = add_ln49_47_fu_1176_p2;

assign zext_ln49_33_fu_1191_p1 = add_ln49_49_fu_1186_p2;

assign zext_ln49_34_fu_1201_p1 = add_ln49_50_fu_1196_p2;

assign zext_ln49_35_fu_1236_p1 = add_ln49_52_fu_1231_p2;

assign zext_ln49_36_fu_1246_p1 = add_ln49_53_fu_1241_p2;

assign zext_ln49_37_fu_1256_p1 = add_ln49_55_fu_1251_p2;

assign zext_ln49_38_fu_1266_p1 = add_ln49_56_fu_1261_p2;

assign zext_ln49_3_fu_735_p1 = add_ln49_4_fu_730_p2;

assign zext_ln49_4_fu_745_p1 = add_ln49_5_fu_740_p2;

assign zext_ln49_5_fu_755_p1 = add_ln49_7_fu_750_p2;

assign zext_ln49_6_fu_765_p1 = add_ln49_8_fu_760_p2;

assign zext_ln49_7_fu_786_p1 = add_ln49_10_fu_781_p2;

assign zext_ln49_8_fu_796_p1 = add_ln49_11_fu_791_p2;

assign zext_ln49_9_fu_807_p1 = add_ln49_13_fu_801_p2;

assign zext_ln49_fu_656_p1 = add_ln49_fu_650_p2;

assign zext_ln51_1_fu_1626_p1 = add_ln51_1_fu_1620_p2;

assign zext_ln51_fu_1616_p1 = add_ln51_3_fu_1611_p2;

always @ (posedge ap_clk) begin
    p_cast72_reg_1862[1:0] <= 2'b00;
    p_cast72_reg_1862[6] <= 1'b0;
    zext_ln43_3_reg_1939[9] <= 1'b0;
    zext_ln43_2_reg_2132[10:9] <= 2'b00;
end

endmodule //CNN_CNN_Pipeline_VITIS_LOOP_41_1_loop_for_ap_1
